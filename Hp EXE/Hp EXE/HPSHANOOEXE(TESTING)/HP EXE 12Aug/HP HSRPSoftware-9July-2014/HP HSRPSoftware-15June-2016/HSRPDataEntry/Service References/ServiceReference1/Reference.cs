//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HSRPDataEntryNew.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.HSRPServiceSoap")]
    public interface HSRPServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateHP_PortablityFromDataSync", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateHP_PortablityFromDataSync(System.Data.DataTable dtReceive, string strColumnStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SearchRecord(string strHsrpstateid, string strVehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchInHRDataRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchInHRDataRequest(string strRtoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateStatus(System.Data.DataSet dsResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillHSRPState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FillHSRPState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillRto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FillRto(string strStateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillProductionSheet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FillProductionSheet(string strStateId, string strRtoId, string strFromdate, string strTodate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillDataGridViewSticker", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FillDataGridViewSticker(string strStateid, string strRTO, string strSheetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetStateInfo(string strStateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataByAuthNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDataByAuthNo(string AuthNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataByVehicleRegNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDataByVehicleRegNo(string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertDataCashCollection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertDataCashCollection(
                    string HSRP_StateID, 
                    string RTOLocationID, 
                    string HSRPRecord_AuthorizationNo, 
                    string HSRPRecord_AuthorizationDate, 
                    string VehicleRegNo, 
                    string OwnerName, 
                    string ownerFatherName, 
                    string Address1, 
                    string MobileNo, 
                    string VehicleClass, 
                    string OrderType, 
                    string StickerMandatory, 
                    string isVIP, 
                    string NetAmount, 
                    string Roundoff_NetAmount, 
                    string VehicleType, 
                    string OrderStatus, 
                    string CashReceiptNo, 
                    string ChassisNo, 
                    string EngineNo, 
                    string DealerCode, 
                    string CreatedBy, 
                    string SaveMacAddress, 
                    string Addrecordby, 
                    string ISFrontPlateSize, 
                    string ISRearPlateSize, 
                    string FrontPlateSize, 
                    string RearPlateSize, 
                    string Reference, 
                    string ManufacturerModel, 
                    string vehicleref, 
                    string ManufacturerName, 
                    string CounterNo, 
                    string Affixid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRtoLocationID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRtoLocationID(string strRto_Cd, string strHsrp_StateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCashInvoiceChallan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCashInvoiceChallan(string strHsrp_stateID, string RtoLocationId, string PreFix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCashInvoiceChallan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateCashInvoiceChallan(string RtoLocationId, string PreFix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRtoAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRtoAddress(string HSRPStateID, string RtoLocationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckOrderType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="strOrderType")]
        string CheckOrderType(string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckDuplicateEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckDuplicateEntry(string HSRPStateID, string AuthNo, string VehicleRegNo, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLogInDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLogInDetail(string UserName, string Password, string MacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CashReceiptForHR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CashReceiptForHR(string AuthNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRateAndTaxDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRateAndTaxDetail(string StateID, string VehicleModel, string VehicleClass, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRateAndTaxForVehicle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRateAndTaxForVehicle(string StateID, string VehicleType, string VehicleClass, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PopulateVehicleType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PopulateVehicleType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PopulateVehicleModel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PopulateVehicleModel(string VehiclMake);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PopulateVehicleMake", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PopulateVehicleMake();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecordClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable RecordClosed(string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecordNotClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable RecordNotClosed(string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InventoryStatusF_NotNewOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InventoryStatusF_NotNewOrder(string Flaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InventoryStatusR_NotNewOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InventoryStatusR_NotNewOrder(string Rlaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InventoryStatusF_NewOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InventoryStatusF_NewOrder(string Flaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InventoryStatusR_NewOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InventoryStatusR_NewOrder(string Rlaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FrontValidation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FrontValidation(string Flaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RearValidation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RearValidation(string Rlaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderStatusNotClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable OrderStatusNotClosed(string VehiclRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderStatusEmbossingDone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int OrderStatusEmbossingDone(string Flaser, string Rlaser, string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderStatusEmbossingDoneUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int OrderStatusEmbossingDoneUpdate(string Flaser, string Rlaser, string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderStatusNewOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int OrderStatusNewOrder(string Flaser, string Rlaser, string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrderStatusNewOrderUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int OrderStatusNewOrderUpdate(string Flaser, string Rlaser, string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Embossing_Validate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Embossing_Validate(string VehiclRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Embossing_OrderStatusNotClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Embossing_OrderStatusNotClosed(string VehiclRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/E_OrderStatusEmbossingDone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int E_OrderStatusEmbossingDone(string Flaser, string Rlaser, string VehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Embossing_RtoInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Embossing_RtoInventory(string Flaser, string Rlaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Chalan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Chalan(string StateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveSMSLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SaveSMSLog(string strHSRP_StateId, string strMobileNo, string strRegNo, string strAuthNo, string strHsrp_Flag, string strSmsText, string smsresponseid, string smsresponsetext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDeatilsUsingVehcileRegNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDeatilsUsingVehcileRegNo(string HsrpStateID, string VehicleRegno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDeatilsUsingVehcileRegNoForClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDeatilsUsingVehcileRegNoForClosed(string HsrpStateID, string VehicleRegno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckOrderstatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable CheckOrderstatus(string strHsrpStateID, string strVehicleReg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckOrderstatusForEmbossing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable CheckOrderstatusForEmbossing(string strHsrpStateID, string strVehicleReg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateLaserCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateLaserCode(string FrontLaserNo, string RearLaserCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateLaserCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateLaserCode(string hsrpStateid, string VehicleRegno, string ordertype, string FrontLaser, string Rearlaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckLaserInHsrpRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckLaserInHsrpRecords(string strOrederType, string strFrontLaser, string strRearlaser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateClosedorder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateClosedorder(string strHsrpStateID, string strRegno, string strFront, string strRear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateHpSmsLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateHpSmsLog(string strMobileNo, string strMessage, string strResult, string strAuthNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateHpSmsLogOnClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateHpSmsLogOnClosed(string strMobileNo, string strMessage, string strResult, string strAuthNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getReportData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable getReportData(string strhsrpStateid, string strRtoLocationId, string strStartDate, string strEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateFourthSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateFourthSms(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateFifthSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateFifthSms(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateLaserCodeForOrderClose", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateLaserCodeForOrderClose(string FrontLaserNo, string RearLaserCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillRTODropDown", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FillRTODropDown(string strStateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRTO_ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRTO_ID(string strStateID, string strNICcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertData(string strRTOLocationID, string strVehicleNo, string strChassisNo, string strOrdertype, string strNICRTOCode, string strUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckDuplicateRecordInHP_PortabilityData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckDuplicateRecordInHP_PortabilityData(string strVehicleReg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillDataGridView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FillDataGridView(string strNICRTOCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataForBooking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDataForBooking(string strVehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateForOrderClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateForOrderClosed(string strvehicleRegno, string strFront, string strRear, string strNICRtoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateForOrderEmbossed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateForOrderEmbossed(string strvehicleRegno, string strFront, string strRear, string strOrderType, string strNICRtoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateForOrderBooking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateForOrderBooking(string strvehicleRegno, string strAuthNo, string strAmount, string strNICRtoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataForSticker", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDataForSticker(string strVehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCashSMSReciept", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCashSMSReciept(System.Data.DataTable dtSMS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSMSOnEmbossing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSMSOnEmbossing(System.Data.DataTable dtSMS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSMSOnClosed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSMSOnClosed(System.Data.DataTable dtSMS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMobileNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetMobileNo(string strVehicleRegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendRecordForUpdationFromDataSync", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SendRecordForUpdationFromDataSync(string StrRtoCd, string strRETRIEVE_FLAG);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HSRPServiceSoapChannel : HSRPDataEntryNew.ServiceReference1.HSRPServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HSRPServiceSoapClient : System.ServiceModel.ClientBase<HSRPDataEntryNew.ServiceReference1.HSRPServiceSoap>, HSRPDataEntryNew.ServiceReference1.HSRPServiceSoap {
        
        public HSRPServiceSoapClient() {
        }
        
        public HSRPServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HSRPServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HSRPServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HSRPServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateHP_PortablityFromDataSync(System.Data.DataTable dtReceive, string strColumnStatus) {
            base.Channel.UpdateHP_PortablityFromDataSync(dtReceive, strColumnStatus);
        }
        
        public System.Data.DataTable SearchRecord(string strHsrpstateid, string strVehicleRegNo) {
            return base.Channel.SearchRecord(strHsrpstateid, strVehicleRegNo);
        }
        
        public System.Data.DataSet SearchInHRDataRequest(string strRtoID) {
            return base.Channel.SearchInHRDataRequest(strRtoID);
        }
        
        public void UpdateStatus(System.Data.DataSet dsResult) {
            base.Channel.UpdateStatus(dsResult);
        }
        
        public System.Data.DataTable FillHSRPState() {
            return base.Channel.FillHSRPState();
        }
        
        public System.Data.DataTable FillRto(string strStateId) {
            return base.Channel.FillRto(strStateId);
        }
        
        public System.Data.DataTable FillProductionSheet(string strStateId, string strRtoId, string strFromdate, string strTodate) {
            return base.Channel.FillProductionSheet(strStateId, strRtoId, strFromdate, strTodate);
        }
        
        public System.Data.DataTable FillDataGridViewSticker(string strStateid, string strRTO, string strSheetName) {
            return base.Channel.FillDataGridViewSticker(strStateid, strRTO, strSheetName);
        }
        
        public System.Data.DataTable GetStateInfo(string strStateId) {
            return base.Channel.GetStateInfo(strStateId);
        }
        
        public System.Data.DataTable GetDataByAuthNo(string AuthNo) {
            return base.Channel.GetDataByAuthNo(AuthNo);
        }
        
        public System.Data.DataTable GetDataByVehicleRegNo(string VehicleRegNo) {
            return base.Channel.GetDataByVehicleRegNo(VehicleRegNo);
        }
        
        public string InsertDataCashCollection(
                    string HSRP_StateID, 
                    string RTOLocationID, 
                    string HSRPRecord_AuthorizationNo, 
                    string HSRPRecord_AuthorizationDate, 
                    string VehicleRegNo, 
                    string OwnerName, 
                    string ownerFatherName, 
                    string Address1, 
                    string MobileNo, 
                    string VehicleClass, 
                    string OrderType, 
                    string StickerMandatory, 
                    string isVIP, 
                    string NetAmount, 
                    string Roundoff_NetAmount, 
                    string VehicleType, 
                    string OrderStatus, 
                    string CashReceiptNo, 
                    string ChassisNo, 
                    string EngineNo, 
                    string DealerCode, 
                    string CreatedBy, 
                    string SaveMacAddress, 
                    string Addrecordby, 
                    string ISFrontPlateSize, 
                    string ISRearPlateSize, 
                    string FrontPlateSize, 
                    string RearPlateSize, 
                    string Reference, 
                    string ManufacturerModel, 
                    string vehicleref, 
                    string ManufacturerName, 
                    string CounterNo, 
                    string Affixid) {
            return base.Channel.InsertDataCashCollection(HSRP_StateID, RTOLocationID, HSRPRecord_AuthorizationNo, HSRPRecord_AuthorizationDate, VehicleRegNo, OwnerName, ownerFatherName, Address1, MobileNo, VehicleClass, OrderType, StickerMandatory, isVIP, NetAmount, Roundoff_NetAmount, VehicleType, OrderStatus, CashReceiptNo, ChassisNo, EngineNo, DealerCode, CreatedBy, SaveMacAddress, Addrecordby, ISFrontPlateSize, ISRearPlateSize, FrontPlateSize, RearPlateSize, Reference, ManufacturerModel, vehicleref, ManufacturerName, CounterNo, Affixid);
        }
        
        public string GetRtoLocationID(string strRto_Cd, string strHsrp_StateId) {
            return base.Channel.GetRtoLocationID(strRto_Cd, strHsrp_StateId);
        }
        
        public string GetCashInvoiceChallan(string strHsrp_stateID, string RtoLocationId, string PreFix) {
            return base.Channel.GetCashInvoiceChallan(strHsrp_stateID, RtoLocationId, PreFix);
        }
        
        public void UpdateCashInvoiceChallan(string RtoLocationId, string PreFix) {
            base.Channel.UpdateCashInvoiceChallan(RtoLocationId, PreFix);
        }
        
        public string GetRtoAddress(string HSRPStateID, string RtoLocationid) {
            return base.Channel.GetRtoAddress(HSRPStateID, RtoLocationid);
        }
        
        public string CheckOrderType(string OrderType) {
            return base.Channel.CheckOrderType(OrderType);
        }
        
        public string CheckDuplicateEntry(string HSRPStateID, string AuthNo, string VehicleRegNo, string OrderType) {
            return base.Channel.CheckDuplicateEntry(HSRPStateID, AuthNo, VehicleRegNo, OrderType);
        }
        
        public string GetLogInDetail(string UserName, string Password, string MacAddress) {
            return base.Channel.GetLogInDetail(UserName, Password, MacAddress);
        }
        
        public string CashReceiptForHR(string AuthNo) {
            return base.Channel.CashReceiptForHR(AuthNo);
        }
        
        public string GetRateAndTaxDetail(string StateID, string VehicleModel, string VehicleClass, string OrderType) {
            return base.Channel.GetRateAndTaxDetail(StateID, VehicleModel, VehicleClass, OrderType);
        }
        
        public string GetRateAndTaxForVehicle(string StateID, string VehicleType, string VehicleClass, string OrderType) {
            return base.Channel.GetRateAndTaxForVehicle(StateID, VehicleType, VehicleClass, OrderType);
        }
        
        public System.Data.DataTable PopulateVehicleType() {
            return base.Channel.PopulateVehicleType();
        }
        
        public System.Data.DataTable PopulateVehicleModel(string VehiclMake) {
            return base.Channel.PopulateVehicleModel(VehiclMake);
        }
        
        public System.Data.DataTable PopulateVehicleMake() {
            return base.Channel.PopulateVehicleMake();
        }
        
        public System.Data.DataTable RecordClosed(string VehicleRegNo) {
            return base.Channel.RecordClosed(VehicleRegNo);
        }
        
        public System.Data.DataTable RecordNotClosed(string VehicleRegNo) {
            return base.Channel.RecordNotClosed(VehicleRegNo);
        }
        
        public string InventoryStatusF_NotNewOrder(string Flaser) {
            return base.Channel.InventoryStatusF_NotNewOrder(Flaser);
        }
        
        public string InventoryStatusR_NotNewOrder(string Rlaser) {
            return base.Channel.InventoryStatusR_NotNewOrder(Rlaser);
        }
        
        public string InventoryStatusF_NewOrder(string Flaser) {
            return base.Channel.InventoryStatusF_NewOrder(Flaser);
        }
        
        public string InventoryStatusR_NewOrder(string Rlaser) {
            return base.Channel.InventoryStatusR_NewOrder(Rlaser);
        }
        
        public string FrontValidation(string Flaser) {
            return base.Channel.FrontValidation(Flaser);
        }
        
        public string RearValidation(string Rlaser) {
            return base.Channel.RearValidation(Rlaser);
        }
        
        public System.Data.DataTable OrderStatusNotClosed(string VehiclRegNo) {
            return base.Channel.OrderStatusNotClosed(VehiclRegNo);
        }
        
        public int OrderStatusEmbossingDone(string Flaser, string Rlaser, string VehicleRegNo) {
            return base.Channel.OrderStatusEmbossingDone(Flaser, Rlaser, VehicleRegNo);
        }
        
        public int OrderStatusEmbossingDoneUpdate(string Flaser, string Rlaser, string VehicleRegNo) {
            return base.Channel.OrderStatusEmbossingDoneUpdate(Flaser, Rlaser, VehicleRegNo);
        }
        
        public int OrderStatusNewOrder(string Flaser, string Rlaser, string VehicleRegNo) {
            return base.Channel.OrderStatusNewOrder(Flaser, Rlaser, VehicleRegNo);
        }
        
        public int OrderStatusNewOrderUpdate(string Flaser, string Rlaser, string VehicleRegNo) {
            return base.Channel.OrderStatusNewOrderUpdate(Flaser, Rlaser, VehicleRegNo);
        }
        
        public System.Data.DataTable Embossing_Validate(string VehiclRegNo) {
            return base.Channel.Embossing_Validate(VehiclRegNo);
        }
        
        public System.Data.DataTable Embossing_OrderStatusNotClosed(string VehiclRegNo) {
            return base.Channel.Embossing_OrderStatusNotClosed(VehiclRegNo);
        }
        
        public int E_OrderStatusEmbossingDone(string Flaser, string Rlaser, string VehicleRegNo) {
            return base.Channel.E_OrderStatusEmbossingDone(Flaser, Rlaser, VehicleRegNo);
        }
        
        public int Embossing_RtoInventory(string Flaser, string Rlaser) {
            return base.Channel.Embossing_RtoInventory(Flaser, Rlaser);
        }
        
        public System.Data.DataTable Chalan(string StateId) {
            return base.Channel.Chalan(StateId);
        }
        
        public void SaveSMSLog(string strHSRP_StateId, string strMobileNo, string strRegNo, string strAuthNo, string strHsrp_Flag, string strSmsText, string smsresponseid, string smsresponsetext) {
            base.Channel.SaveSMSLog(strHSRP_StateId, strMobileNo, strRegNo, strAuthNo, strHsrp_Flag, strSmsText, smsresponseid, smsresponsetext);
        }
        
        public System.Data.DataTable GetDeatilsUsingVehcileRegNo(string HsrpStateID, string VehicleRegno) {
            return base.Channel.GetDeatilsUsingVehcileRegNo(HsrpStateID, VehicleRegno);
        }
        
        public System.Data.DataTable GetDeatilsUsingVehcileRegNoForClosed(string HsrpStateID, string VehicleRegno) {
            return base.Channel.GetDeatilsUsingVehcileRegNoForClosed(HsrpStateID, VehicleRegno);
        }
        
        public System.Data.DataTable CheckOrderstatus(string strHsrpStateID, string strVehicleReg) {
            return base.Channel.CheckOrderstatus(strHsrpStateID, strVehicleReg);
        }
        
        public System.Data.DataTable CheckOrderstatusForEmbossing(string strHsrpStateID, string strVehicleReg) {
            return base.Channel.CheckOrderstatusForEmbossing(strHsrpStateID, strVehicleReg);
        }
        
        public string ValidateLaserCode(string FrontLaserNo, string RearLaserCode) {
            return base.Channel.ValidateLaserCode(FrontLaserNo, RearLaserCode);
        }
        
        public string UpdateLaserCode(string hsrpStateid, string VehicleRegno, string ordertype, string FrontLaser, string Rearlaser) {
            return base.Channel.UpdateLaserCode(hsrpStateid, VehicleRegno, ordertype, FrontLaser, Rearlaser);
        }
        
        public string CheckLaserInHsrpRecords(string strOrederType, string strFrontLaser, string strRearlaser) {
            return base.Channel.CheckLaserInHsrpRecords(strOrederType, strFrontLaser, strRearlaser);
        }
        
        public string UpdateClosedorder(string strHsrpStateID, string strRegno, string strFront, string strRear) {
            return base.Channel.UpdateClosedorder(strHsrpStateID, strRegno, strFront, strRear);
        }
        
        public string UpdateHpSmsLog(string strMobileNo, string strMessage, string strResult, string strAuthNo) {
            return base.Channel.UpdateHpSmsLog(strMobileNo, strMessage, strResult, strAuthNo);
        }
        
        public string UpdateHpSmsLogOnClosed(string strMobileNo, string strMessage, string strResult, string strAuthNo) {
            return base.Channel.UpdateHpSmsLogOnClosed(strMobileNo, strMessage, strResult, strAuthNo);
        }
        
        public System.Data.DataTable getReportData(string strhsrpStateid, string strRtoLocationId, string strStartDate, string strEndDate) {
            return base.Channel.getReportData(strhsrpStateid, strRtoLocationId, strStartDate, strEndDate);
        }
        
        public void updateFourthSms(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult) {
            base.Channel.updateFourthSms(strHsrp_stateid, strVehicleRegNo, strMessage, strResult);
        }
        
        public void updateFifthSms(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult) {
            base.Channel.updateFifthSms(strHsrp_stateid, strVehicleRegNo, strMessage, strResult);
        }
        
        public string ValidateLaserCodeForOrderClose(string FrontLaserNo, string RearLaserCode) {
            return base.Channel.ValidateLaserCodeForOrderClose(FrontLaserNo, RearLaserCode);
        }
        
        public System.Data.DataTable FillRTODropDown(string strStateID) {
            return base.Channel.FillRTODropDown(strStateID);
        }
        
        public string GetRTO_ID(string strStateID, string strNICcode) {
            return base.Channel.GetRTO_ID(strStateID, strNICcode);
        }
        
        public string InsertData(string strRTOLocationID, string strVehicleNo, string strChassisNo, string strOrdertype, string strNICRTOCode, string strUserId) {
            return base.Channel.InsertData(strRTOLocationID, strVehicleNo, strChassisNo, strOrdertype, strNICRTOCode, strUserId);
        }
        
        public string CheckDuplicateRecordInHP_PortabilityData(string strVehicleReg) {
            return base.Channel.CheckDuplicateRecordInHP_PortabilityData(strVehicleReg);
        }
        
        public System.Data.DataTable FillDataGridView(string strNICRTOCode) {
            return base.Channel.FillDataGridView(strNICRTOCode);
        }
        
        public System.Data.DataTable GetDataForBooking(string strVehicleRegNo) {
            return base.Channel.GetDataForBooking(strVehicleRegNo);
        }
        
        public string UpdateForOrderClosed(string strvehicleRegno, string strFront, string strRear, string strNICRtoId) {
            return base.Channel.UpdateForOrderClosed(strvehicleRegno, strFront, strRear, strNICRtoId);
        }
        
        public string UpdateForOrderEmbossed(string strvehicleRegno, string strFront, string strRear, string strOrderType, string strNICRtoId) {
            return base.Channel.UpdateForOrderEmbossed(strvehicleRegno, strFront, strRear, strOrderType, strNICRtoId);
        }
        
        public string UpdateForOrderBooking(string strvehicleRegno, string strAuthNo, string strAmount, string strNICRtoId) {
            return base.Channel.UpdateForOrderBooking(strvehicleRegno, strAuthNo, strAmount, strNICRtoId);
        }
        
        public System.Data.DataSet GetDataForSticker(string strVehicleRegNo) {
            return base.Channel.GetDataForSticker(strVehicleRegNo);
        }
        
        public string UpdateCashSMSReciept(System.Data.DataTable dtSMS) {
            return base.Channel.UpdateCashSMSReciept(dtSMS);
        }
        
        public string UpdateSMSOnEmbossing(System.Data.DataTable dtSMS) {
            return base.Channel.UpdateSMSOnEmbossing(dtSMS);
        }
        
        public string UpdateSMSOnClosed(System.Data.DataTable dtSMS) {
            return base.Channel.UpdateSMSOnClosed(dtSMS);
        }
        
        public System.Data.DataTable GetMobileNo(string strVehicleRegNo) {
            return base.Channel.GetMobileNo(strVehicleRegNo);
        }
        
        public System.Data.DataTable SendRecordForUpdationFromDataSync(string StrRtoCd, string strRETRIEVE_FLAG) {
            return base.Channel.SendRecordForUpdationFromDataSync(StrRtoCd, strRETRIEVE_FLAG);
        }
    }
}
