//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace HSRPDataEntryNew.HPWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HSRPServiceSoap", Namespace="http://tempuri.org/")]
    public partial class HSRPService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendRecordForUpdationFromDataSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHP_PortablityFromDataSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchInHRDataRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillHSRPStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillRtoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillProductionSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillDataGridViewStickerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByAuthNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByVehicleRegNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataCashCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRtoLocationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashInvoiceChallanOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCashInvoiceChallanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRtoAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOrderTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDuplicateEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogInDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CashReceiptForHROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRateAndTaxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRateAndTaxForVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateVehicleTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateVehicleModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateVehicleMakeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordNotClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InventoryStatusF_NotNewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InventoryStatusR_NotNewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InventoryStatusF_NewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InventoryStatusR_NewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FrontValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RearValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderStatusNotClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderStatusEmbossingDoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderStatusEmbossingDoneUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderStatusNewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderStatusNewOrderUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Embossing_ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Embossing_OrderStatusNotClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback E_OrderStatusEmbossingDoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback Embossing_RtoInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChalanOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSMSLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeatilsUsingVehcileRegNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeatilsUsingVehcileRegNoForClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOrderstatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOrderstatusForEmbossingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLaserCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLaserCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLaserInHsrpRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClosedorderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHpSmsLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHpSmsLogOnClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFourthSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFifthSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLaserCodeForOrderCloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillRTODropDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRTO_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDuplicateRecordInHP_PortabilityDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback FillDataGridViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataForBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForOrderClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForOrderEmbossedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForOrderBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataForStickerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCashSMSRecieptOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMSOnEmbossingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMSOnClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HSRPService() {
            this.Url = global::HSRPDataEntryNew.Properties.Settings.Default.HSRP_3_9_HPWebService_HSRPService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendRecordForUpdationFromDataSyncCompletedEventHandler SendRecordForUpdationFromDataSyncCompleted;
        
        /// <remarks/>
        public event UpdateHP_PortablityFromDataSyncCompletedEventHandler UpdateHP_PortablityFromDataSyncCompleted;
        
        /// <remarks/>
        public event SearchRecordCompletedEventHandler SearchRecordCompleted;
        
        /// <remarks/>
        public event SearchInHRDataRequestCompletedEventHandler SearchInHRDataRequestCompleted;
        
        /// <remarks/>
        public event UpdateStatusCompletedEventHandler UpdateStatusCompleted;
        
        /// <remarks/>
        public event FillHSRPStateCompletedEventHandler FillHSRPStateCompleted;
        
        /// <remarks/>
        public event FillRtoCompletedEventHandler FillRtoCompleted;
        
        /// <remarks/>
        public event FillProductionSheetCompletedEventHandler FillProductionSheetCompleted;
        
        /// <remarks/>
        public event FillDataGridViewStickerCompletedEventHandler FillDataGridViewStickerCompleted;
        
        /// <remarks/>
        public event GetStateInfoCompletedEventHandler GetStateInfoCompleted;
        
        /// <remarks/>
        public event GetRecordsCompletedEventHandler GetRecordsCompleted;
        
        /// <remarks/>
        public event GetDataByAuthNoCompletedEventHandler GetDataByAuthNoCompleted;
        
        /// <remarks/>
        public event GetDataByVehicleRegNoCompletedEventHandler GetDataByVehicleRegNoCompleted;
        
        /// <remarks/>
        public event InsertDataCashCollectionCompletedEventHandler InsertDataCashCollectionCompleted;
        
        /// <remarks/>
        public event GetRtoLocationIDCompletedEventHandler GetRtoLocationIDCompleted;
        
        /// <remarks/>
        public event GetCashInvoiceChallanCompletedEventHandler GetCashInvoiceChallanCompleted;
        
        /// <remarks/>
        public event UpdateCashInvoiceChallanCompletedEventHandler UpdateCashInvoiceChallanCompleted;
        
        /// <remarks/>
        public event GetRtoAddressCompletedEventHandler GetRtoAddressCompleted;
        
        /// <remarks/>
        public event CheckOrderTypeCompletedEventHandler CheckOrderTypeCompleted;
        
        /// <remarks/>
        public event CheckDuplicateEntryCompletedEventHandler CheckDuplicateEntryCompleted;
        
        /// <remarks/>
        public event GetLogInDetailCompletedEventHandler GetLogInDetailCompleted;
        
        /// <remarks/>
        public event CashReceiptForHRCompletedEventHandler CashReceiptForHRCompleted;
        
        /// <remarks/>
        public event GetRateAndTaxDetailCompletedEventHandler GetRateAndTaxDetailCompleted;
        
        /// <remarks/>
        public event GetRateAndTaxForVehicleCompletedEventHandler GetRateAndTaxForVehicleCompleted;
        
        /// <remarks/>
        public event PopulateVehicleTypeCompletedEventHandler PopulateVehicleTypeCompleted;
        
        /// <remarks/>
        public event PopulateVehicleModelCompletedEventHandler PopulateVehicleModelCompleted;
        
        /// <remarks/>
        public event PopulateVehicleMakeCompletedEventHandler PopulateVehicleMakeCompleted;
        
        /// <remarks/>
        public event RecordClosedCompletedEventHandler RecordClosedCompleted;
        
        /// <remarks/>
        public event RecordNotClosedCompletedEventHandler RecordNotClosedCompleted;
        
        /// <remarks/>
        public event InventoryStatusF_NotNewOrderCompletedEventHandler InventoryStatusF_NotNewOrderCompleted;
        
        /// <remarks/>
        public event InventoryStatusR_NotNewOrderCompletedEventHandler InventoryStatusR_NotNewOrderCompleted;
        
        /// <remarks/>
        public event InventoryStatusF_NewOrderCompletedEventHandler InventoryStatusF_NewOrderCompleted;
        
        /// <remarks/>
        public event InventoryStatusR_NewOrderCompletedEventHandler InventoryStatusR_NewOrderCompleted;
        
        /// <remarks/>
        public event FrontValidationCompletedEventHandler FrontValidationCompleted;
        
        /// <remarks/>
        public event RearValidationCompletedEventHandler RearValidationCompleted;
        
        /// <remarks/>
        public event OrderStatusNotClosedCompletedEventHandler OrderStatusNotClosedCompleted;
        
        /// <remarks/>
        public event OrderStatusEmbossingDoneCompletedEventHandler OrderStatusEmbossingDoneCompleted;
        
        /// <remarks/>
        public event OrderStatusEmbossingDoneUpdateCompletedEventHandler OrderStatusEmbossingDoneUpdateCompleted;
        
        /// <remarks/>
        public event OrderStatusNewOrderCompletedEventHandler OrderStatusNewOrderCompleted;
        
        /// <remarks/>
        public event OrderStatusNewOrderUpdateCompletedEventHandler OrderStatusNewOrderUpdateCompleted;
        
        /// <remarks/>
        public event Embossing_ValidateCompletedEventHandler Embossing_ValidateCompleted;
        
        /// <remarks/>
        public event Embossing_OrderStatusNotClosedCompletedEventHandler Embossing_OrderStatusNotClosedCompleted;
        
        /// <remarks/>
        public event E_OrderStatusEmbossingDoneCompletedEventHandler E_OrderStatusEmbossingDoneCompleted;
        
        /// <remarks/>
        public event Embossing_RtoInventoryCompletedEventHandler Embossing_RtoInventoryCompleted;
        
        /// <remarks/>
        public event ChalanCompletedEventHandler ChalanCompleted;
        
        /// <remarks/>
        public event SaveSMSLogCompletedEventHandler SaveSMSLogCompleted;
        
        /// <remarks/>
        public event GetDeatilsUsingVehcileRegNoCompletedEventHandler GetDeatilsUsingVehcileRegNoCompleted;
        
        /// <remarks/>
        public event GetDeatilsUsingVehcileRegNoForClosedCompletedEventHandler GetDeatilsUsingVehcileRegNoForClosedCompleted;
        
        /// <remarks/>
        public event CheckOrderstatusCompletedEventHandler CheckOrderstatusCompleted;
        
        /// <remarks/>
        public event CheckOrderstatusForEmbossingCompletedEventHandler CheckOrderstatusForEmbossingCompleted;
        
        /// <remarks/>
        public event ValidateLaserCodeCompletedEventHandler ValidateLaserCodeCompleted;
        
        /// <remarks/>
        public event UpdateLaserCodeCompletedEventHandler UpdateLaserCodeCompleted;
        
        /// <remarks/>
        public event CheckLaserInHsrpRecordsCompletedEventHandler CheckLaserInHsrpRecordsCompleted;
        
        /// <remarks/>
        public event UpdateClosedorderCompletedEventHandler UpdateClosedorderCompleted;
        
        /// <remarks/>
        public event UpdateHpSmsLogCompletedEventHandler UpdateHpSmsLogCompleted;
        
        /// <remarks/>
        public event UpdateHpSmsLogOnClosedCompletedEventHandler UpdateHpSmsLogOnClosedCompleted;
        
        /// <remarks/>
        public event getReportDataCompletedEventHandler getReportDataCompleted;
        
        /// <remarks/>
        public event updateFourthSmsCompletedEventHandler updateFourthSmsCompleted;
        
        /// <remarks/>
        public event updateFifthSmsCompletedEventHandler updateFifthSmsCompleted;
        
        /// <remarks/>
        public event ValidateLaserCodeForOrderCloseCompletedEventHandler ValidateLaserCodeForOrderCloseCompleted;
        
        /// <remarks/>
        public event FillRTODropDownCompletedEventHandler FillRTODropDownCompleted;
        
        /// <remarks/>
        public event GetRTO_IDCompletedEventHandler GetRTO_IDCompleted;
        
        /// <remarks/>
        public event InsertDataCompletedEventHandler InsertDataCompleted;
        
        /// <remarks/>
        public event CheckDuplicateRecordInHP_PortabilityDataCompletedEventHandler CheckDuplicateRecordInHP_PortabilityDataCompleted;
        
        /// <remarks/>
        public event FillDataGridViewCompletedEventHandler FillDataGridViewCompleted;
        
        /// <remarks/>
        public event GetDataForBookingCompletedEventHandler GetDataForBookingCompleted;
        
        /// <remarks/>
        public event UpdateForOrderClosedCompletedEventHandler UpdateForOrderClosedCompleted;
        
        /// <remarks/>
        public event UpdateForOrderEmbossedCompletedEventHandler UpdateForOrderEmbossedCompleted;
        
        /// <remarks/>
        public event UpdateForOrderBookingCompletedEventHandler UpdateForOrderBookingCompleted;
        
        /// <remarks/>
        public event GetDataForStickerCompletedEventHandler GetDataForStickerCompleted;
        
        /// <remarks/>
        public event UpdateCashSMSRecieptCompletedEventHandler UpdateCashSMSRecieptCompleted;
        
        /// <remarks/>
        public event UpdateSMSOnEmbossingCompletedEventHandler UpdateSMSOnEmbossingCompleted;
        
        /// <remarks/>
        public event UpdateSMSOnClosedCompletedEventHandler UpdateSMSOnClosedCompleted;
        
        /// <remarks/>
        public event GetMobileNoCompletedEventHandler GetMobileNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendRecordForUpdationFromDataSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SendRecordForUpdationFromDataSync(string StrRtoCd, string strRETRIEVE_FLAG) {
            object[] results = this.Invoke("SendRecordForUpdationFromDataSync", new object[] {
                        StrRtoCd,
                        strRETRIEVE_FLAG});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SendRecordForUpdationFromDataSyncAsync(string StrRtoCd, string strRETRIEVE_FLAG) {
            this.SendRecordForUpdationFromDataSyncAsync(StrRtoCd, strRETRIEVE_FLAG, null);
        }
        
        /// <remarks/>
        public void SendRecordForUpdationFromDataSyncAsync(string StrRtoCd, string strRETRIEVE_FLAG, object userState) {
            if ((this.SendRecordForUpdationFromDataSyncOperationCompleted == null)) {
                this.SendRecordForUpdationFromDataSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRecordForUpdationFromDataSyncOperationCompleted);
            }
            this.InvokeAsync("SendRecordForUpdationFromDataSync", new object[] {
                        StrRtoCd,
                        strRETRIEVE_FLAG}, this.SendRecordForUpdationFromDataSyncOperationCompleted, userState);
        }
        
        private void OnSendRecordForUpdationFromDataSyncOperationCompleted(object arg) {
            if ((this.SendRecordForUpdationFromDataSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRecordForUpdationFromDataSyncCompleted(this, new SendRecordForUpdationFromDataSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHP_PortablityFromDataSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHP_PortablityFromDataSync(System.Data.DataTable dtReceive, string strColumnStatus) {
            this.Invoke("UpdateHP_PortablityFromDataSync", new object[] {
                        dtReceive,
                        strColumnStatus});
        }
        
        /// <remarks/>
        public void UpdateHP_PortablityFromDataSyncAsync(System.Data.DataTable dtReceive, string strColumnStatus) {
            this.UpdateHP_PortablityFromDataSyncAsync(dtReceive, strColumnStatus, null);
        }
        
        /// <remarks/>
        public void UpdateHP_PortablityFromDataSyncAsync(System.Data.DataTable dtReceive, string strColumnStatus, object userState) {
            if ((this.UpdateHP_PortablityFromDataSyncOperationCompleted == null)) {
                this.UpdateHP_PortablityFromDataSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHP_PortablityFromDataSyncOperationCompleted);
            }
            this.InvokeAsync("UpdateHP_PortablityFromDataSync", new object[] {
                        dtReceive,
                        strColumnStatus}, this.UpdateHP_PortablityFromDataSyncOperationCompleted, userState);
        }
        
        private void OnUpdateHP_PortablityFromDataSyncOperationCompleted(object arg) {
            if ((this.UpdateHP_PortablityFromDataSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHP_PortablityFromDataSyncCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SearchRecord(string strHsrpstateid, string strVehicleRegNo) {
            object[] results = this.Invoke("SearchRecord", new object[] {
                        strHsrpstateid,
                        strVehicleRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SearchRecordAsync(string strHsrpstateid, string strVehicleRegNo) {
            this.SearchRecordAsync(strHsrpstateid, strVehicleRegNo, null);
        }
        
        /// <remarks/>
        public void SearchRecordAsync(string strHsrpstateid, string strVehicleRegNo, object userState) {
            if ((this.SearchRecordOperationCompleted == null)) {
                this.SearchRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchRecordOperationCompleted);
            }
            this.InvokeAsync("SearchRecord", new object[] {
                        strHsrpstateid,
                        strVehicleRegNo}, this.SearchRecordOperationCompleted, userState);
        }
        
        private void OnSearchRecordOperationCompleted(object arg) {
            if ((this.SearchRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchRecordCompleted(this, new SearchRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchInHRDataRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchInHRDataRequest(string strRtoID) {
            object[] results = this.Invoke("SearchInHRDataRequest", new object[] {
                        strRtoID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchInHRDataRequestAsync(string strRtoID) {
            this.SearchInHRDataRequestAsync(strRtoID, null);
        }
        
        /// <remarks/>
        public void SearchInHRDataRequestAsync(string strRtoID, object userState) {
            if ((this.SearchInHRDataRequestOperationCompleted == null)) {
                this.SearchInHRDataRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchInHRDataRequestOperationCompleted);
            }
            this.InvokeAsync("SearchInHRDataRequest", new object[] {
                        strRtoID}, this.SearchInHRDataRequestOperationCompleted, userState);
        }
        
        private void OnSearchInHRDataRequestOperationCompleted(object arg) {
            if ((this.SearchInHRDataRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchInHRDataRequestCompleted(this, new SearchInHRDataRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStatus(System.Data.DataSet dsResult) {
            this.Invoke("UpdateStatus", new object[] {
                        dsResult});
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(System.Data.DataSet dsResult) {
            this.UpdateStatusAsync(dsResult, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(System.Data.DataSet dsResult, object userState) {
            if ((this.UpdateStatusOperationCompleted == null)) {
                this.UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateStatus", new object[] {
                        dsResult}, this.UpdateStatusOperationCompleted, userState);
        }
        
        private void OnUpdateStatusOperationCompleted(object arg) {
            if ((this.UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillHSRPState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FillHSRPState() {
            object[] results = this.Invoke("FillHSRPState", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FillHSRPStateAsync() {
            this.FillHSRPStateAsync(null);
        }
        
        /// <remarks/>
        public void FillHSRPStateAsync(object userState) {
            if ((this.FillHSRPStateOperationCompleted == null)) {
                this.FillHSRPStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillHSRPStateOperationCompleted);
            }
            this.InvokeAsync("FillHSRPState", new object[0], this.FillHSRPStateOperationCompleted, userState);
        }
        
        private void OnFillHSRPStateOperationCompleted(object arg) {
            if ((this.FillHSRPStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillHSRPStateCompleted(this, new FillHSRPStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillRto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FillRto(string strStateId) {
            object[] results = this.Invoke("FillRto", new object[] {
                        strStateId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FillRtoAsync(string strStateId) {
            this.FillRtoAsync(strStateId, null);
        }
        
        /// <remarks/>
        public void FillRtoAsync(string strStateId, object userState) {
            if ((this.FillRtoOperationCompleted == null)) {
                this.FillRtoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillRtoOperationCompleted);
            }
            this.InvokeAsync("FillRto", new object[] {
                        strStateId}, this.FillRtoOperationCompleted, userState);
        }
        
        private void OnFillRtoOperationCompleted(object arg) {
            if ((this.FillRtoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillRtoCompleted(this, new FillRtoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillProductionSheet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FillProductionSheet(string strStateId, string strRtoId, string strFromdate, string strTodate) {
            object[] results = this.Invoke("FillProductionSheet", new object[] {
                        strStateId,
                        strRtoId,
                        strFromdate,
                        strTodate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FillProductionSheetAsync(string strStateId, string strRtoId, string strFromdate, string strTodate) {
            this.FillProductionSheetAsync(strStateId, strRtoId, strFromdate, strTodate, null);
        }
        
        /// <remarks/>
        public void FillProductionSheetAsync(string strStateId, string strRtoId, string strFromdate, string strTodate, object userState) {
            if ((this.FillProductionSheetOperationCompleted == null)) {
                this.FillProductionSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillProductionSheetOperationCompleted);
            }
            this.InvokeAsync("FillProductionSheet", new object[] {
                        strStateId,
                        strRtoId,
                        strFromdate,
                        strTodate}, this.FillProductionSheetOperationCompleted, userState);
        }
        
        private void OnFillProductionSheetOperationCompleted(object arg) {
            if ((this.FillProductionSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillProductionSheetCompleted(this, new FillProductionSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillDataGridViewSticker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FillDataGridViewSticker(string strStateid, string strRTO, string strSheetName) {
            object[] results = this.Invoke("FillDataGridViewSticker", new object[] {
                        strStateid,
                        strRTO,
                        strSheetName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FillDataGridViewStickerAsync(string strStateid, string strRTO, string strSheetName) {
            this.FillDataGridViewStickerAsync(strStateid, strRTO, strSheetName, null);
        }
        
        /// <remarks/>
        public void FillDataGridViewStickerAsync(string strStateid, string strRTO, string strSheetName, object userState) {
            if ((this.FillDataGridViewStickerOperationCompleted == null)) {
                this.FillDataGridViewStickerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillDataGridViewStickerOperationCompleted);
            }
            this.InvokeAsync("FillDataGridViewSticker", new object[] {
                        strStateid,
                        strRTO,
                        strSheetName}, this.FillDataGridViewStickerOperationCompleted, userState);
        }
        
        private void OnFillDataGridViewStickerOperationCompleted(object arg) {
            if ((this.FillDataGridViewStickerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillDataGridViewStickerCompleted(this, new FillDataGridViewStickerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStateInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStateInfo(string strStateId) {
            object[] results = this.Invoke("GetStateInfo", new object[] {
                        strStateId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateInfoAsync(string strStateId) {
            this.GetStateInfoAsync(strStateId, null);
        }
        
        /// <remarks/>
        public void GetStateInfoAsync(string strStateId, object userState) {
            if ((this.GetStateInfoOperationCompleted == null)) {
                this.GetStateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateInfoOperationCompleted);
            }
            this.InvokeAsync("GetStateInfo", new object[] {
                        strStateId}, this.GetStateInfoOperationCompleted, userState);
        }
        
        private void OnGetStateInfoOperationCompleted(object arg) {
            if ((this.GetStateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateInfoCompleted(this, new GetStateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRecords(System.Data.DataTable dt) {
            object[] results = this.Invoke("GetRecords", new object[] {
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordsAsync(System.Data.DataTable dt) {
            this.GetRecordsAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetRecordsAsync(System.Data.DataTable dt, object userState) {
            if ((this.GetRecordsOperationCompleted == null)) {
                this.GetRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordsOperationCompleted);
            }
            this.InvokeAsync("GetRecords", new object[] {
                        dt}, this.GetRecordsOperationCompleted, userState);
        }
        
        private void OnGetRecordsOperationCompleted(object arg) {
            if ((this.GetRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordsCompleted(this, new GetRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataByAuthNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataByAuthNo(string AuthNo) {
            object[] results = this.Invoke("GetDataByAuthNo", new object[] {
                        AuthNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByAuthNoAsync(string AuthNo) {
            this.GetDataByAuthNoAsync(AuthNo, null);
        }
        
        /// <remarks/>
        public void GetDataByAuthNoAsync(string AuthNo, object userState) {
            if ((this.GetDataByAuthNoOperationCompleted == null)) {
                this.GetDataByAuthNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByAuthNoOperationCompleted);
            }
            this.InvokeAsync("GetDataByAuthNo", new object[] {
                        AuthNo}, this.GetDataByAuthNoOperationCompleted, userState);
        }
        
        private void OnGetDataByAuthNoOperationCompleted(object arg) {
            if ((this.GetDataByAuthNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByAuthNoCompleted(this, new GetDataByAuthNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataByVehicleRegNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataByVehicleRegNo(string VehicleRegNo) {
            object[] results = this.Invoke("GetDataByVehicleRegNo", new object[] {
                        VehicleRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByVehicleRegNoAsync(string VehicleRegNo) {
            this.GetDataByVehicleRegNoAsync(VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void GetDataByVehicleRegNoAsync(string VehicleRegNo, object userState) {
            if ((this.GetDataByVehicleRegNoOperationCompleted == null)) {
                this.GetDataByVehicleRegNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByVehicleRegNoOperationCompleted);
            }
            this.InvokeAsync("GetDataByVehicleRegNo", new object[] {
                        VehicleRegNo}, this.GetDataByVehicleRegNoOperationCompleted, userState);
        }
        
        private void OnGetDataByVehicleRegNoOperationCompleted(object arg) {
            if ((this.GetDataByVehicleRegNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByVehicleRegNoCompleted(this, new GetDataByVehicleRegNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataCashCollection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDataCashCollection(
                    string HSRP_StateID, 
                    string RTOLocationID, 
                    string HSRPRecord_AuthorizationNo, 
                    string HSRPRecord_AuthorizationDate, 
                    string VehicleRegNo, 
                    string OwnerName, 
                    string ownerFatherName, 
                    string Address1, 
                    string MobileNo, 
                    string VehicleClass, 
                    string OrderType, 
                    string StickerMandatory, 
                    string isVIP, 
                    string NetAmount, 
                    string Roundoff_NetAmount, 
                    string VehicleType, 
                    string OrderStatus, 
                    string CashReceiptNo, 
                    string ChassisNo, 
                    string EngineNo, 
                    string DealerCode, 
                    string CreatedBy, 
                    string SaveMacAddress, 
                    string Addrecordby, 
                    string ISFrontPlateSize, 
                    string ISRearPlateSize, 
                    string FrontPlateSize, 
                    string RearPlateSize, 
                    string Reference, 
                    string ManufacturerModel, 
                    string vehicleref, 
                    string ManufacturerName, 
                    string CounterNo, 
                    string Affixid) {
            object[] results = this.Invoke("InsertDataCashCollection", new object[] {
                        HSRP_StateID,
                        RTOLocationID,
                        HSRPRecord_AuthorizationNo,
                        HSRPRecord_AuthorizationDate,
                        VehicleRegNo,
                        OwnerName,
                        ownerFatherName,
                        Address1,
                        MobileNo,
                        VehicleClass,
                        OrderType,
                        StickerMandatory,
                        isVIP,
                        NetAmount,
                        Roundoff_NetAmount,
                        VehicleType,
                        OrderStatus,
                        CashReceiptNo,
                        ChassisNo,
                        EngineNo,
                        DealerCode,
                        CreatedBy,
                        SaveMacAddress,
                        Addrecordby,
                        ISFrontPlateSize,
                        ISRearPlateSize,
                        FrontPlateSize,
                        RearPlateSize,
                        Reference,
                        ManufacturerModel,
                        vehicleref,
                        ManufacturerName,
                        CounterNo,
                        Affixid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataCashCollectionAsync(
                    string HSRP_StateID, 
                    string RTOLocationID, 
                    string HSRPRecord_AuthorizationNo, 
                    string HSRPRecord_AuthorizationDate, 
                    string VehicleRegNo, 
                    string OwnerName, 
                    string ownerFatherName, 
                    string Address1, 
                    string MobileNo, 
                    string VehicleClass, 
                    string OrderType, 
                    string StickerMandatory, 
                    string isVIP, 
                    string NetAmount, 
                    string Roundoff_NetAmount, 
                    string VehicleType, 
                    string OrderStatus, 
                    string CashReceiptNo, 
                    string ChassisNo, 
                    string EngineNo, 
                    string DealerCode, 
                    string CreatedBy, 
                    string SaveMacAddress, 
                    string Addrecordby, 
                    string ISFrontPlateSize, 
                    string ISRearPlateSize, 
                    string FrontPlateSize, 
                    string RearPlateSize, 
                    string Reference, 
                    string ManufacturerModel, 
                    string vehicleref, 
                    string ManufacturerName, 
                    string CounterNo, 
                    string Affixid) {
            this.InsertDataCashCollectionAsync(HSRP_StateID, RTOLocationID, HSRPRecord_AuthorizationNo, HSRPRecord_AuthorizationDate, VehicleRegNo, OwnerName, ownerFatherName, Address1, MobileNo, VehicleClass, OrderType, StickerMandatory, isVIP, NetAmount, Roundoff_NetAmount, VehicleType, OrderStatus, CashReceiptNo, ChassisNo, EngineNo, DealerCode, CreatedBy, SaveMacAddress, Addrecordby, ISFrontPlateSize, ISRearPlateSize, FrontPlateSize, RearPlateSize, Reference, ManufacturerModel, vehicleref, ManufacturerName, CounterNo, Affixid, null);
        }
        
        /// <remarks/>
        public void InsertDataCashCollectionAsync(
                    string HSRP_StateID, 
                    string RTOLocationID, 
                    string HSRPRecord_AuthorizationNo, 
                    string HSRPRecord_AuthorizationDate, 
                    string VehicleRegNo, 
                    string OwnerName, 
                    string ownerFatherName, 
                    string Address1, 
                    string MobileNo, 
                    string VehicleClass, 
                    string OrderType, 
                    string StickerMandatory, 
                    string isVIP, 
                    string NetAmount, 
                    string Roundoff_NetAmount, 
                    string VehicleType, 
                    string OrderStatus, 
                    string CashReceiptNo, 
                    string ChassisNo, 
                    string EngineNo, 
                    string DealerCode, 
                    string CreatedBy, 
                    string SaveMacAddress, 
                    string Addrecordby, 
                    string ISFrontPlateSize, 
                    string ISRearPlateSize, 
                    string FrontPlateSize, 
                    string RearPlateSize, 
                    string Reference, 
                    string ManufacturerModel, 
                    string vehicleref, 
                    string ManufacturerName, 
                    string CounterNo, 
                    string Affixid, 
                    object userState) {
            if ((this.InsertDataCashCollectionOperationCompleted == null)) {
                this.InsertDataCashCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataCashCollectionOperationCompleted);
            }
            this.InvokeAsync("InsertDataCashCollection", new object[] {
                        HSRP_StateID,
                        RTOLocationID,
                        HSRPRecord_AuthorizationNo,
                        HSRPRecord_AuthorizationDate,
                        VehicleRegNo,
                        OwnerName,
                        ownerFatherName,
                        Address1,
                        MobileNo,
                        VehicleClass,
                        OrderType,
                        StickerMandatory,
                        isVIP,
                        NetAmount,
                        Roundoff_NetAmount,
                        VehicleType,
                        OrderStatus,
                        CashReceiptNo,
                        ChassisNo,
                        EngineNo,
                        DealerCode,
                        CreatedBy,
                        SaveMacAddress,
                        Addrecordby,
                        ISFrontPlateSize,
                        ISRearPlateSize,
                        FrontPlateSize,
                        RearPlateSize,
                        Reference,
                        ManufacturerModel,
                        vehicleref,
                        ManufacturerName,
                        CounterNo,
                        Affixid}, this.InsertDataCashCollectionOperationCompleted, userState);
        }
        
        private void OnInsertDataCashCollectionOperationCompleted(object arg) {
            if ((this.InsertDataCashCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataCashCollectionCompleted(this, new InsertDataCashCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRtoLocationID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRtoLocationID(string strRto_Cd, string strHsrp_StateId) {
            object[] results = this.Invoke("GetRtoLocationID", new object[] {
                        strRto_Cd,
                        strHsrp_StateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRtoLocationIDAsync(string strRto_Cd, string strHsrp_StateId) {
            this.GetRtoLocationIDAsync(strRto_Cd, strHsrp_StateId, null);
        }
        
        /// <remarks/>
        public void GetRtoLocationIDAsync(string strRto_Cd, string strHsrp_StateId, object userState) {
            if ((this.GetRtoLocationIDOperationCompleted == null)) {
                this.GetRtoLocationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRtoLocationIDOperationCompleted);
            }
            this.InvokeAsync("GetRtoLocationID", new object[] {
                        strRto_Cd,
                        strHsrp_StateId}, this.GetRtoLocationIDOperationCompleted, userState);
        }
        
        private void OnGetRtoLocationIDOperationCompleted(object arg) {
            if ((this.GetRtoLocationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRtoLocationIDCompleted(this, new GetRtoLocationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCashInvoiceChallan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCashInvoiceChallan(string strHsrp_stateID, string RtoLocationId, string PreFix) {
            object[] results = this.Invoke("GetCashInvoiceChallan", new object[] {
                        strHsrp_stateID,
                        RtoLocationId,
                        PreFix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashInvoiceChallanAsync(string strHsrp_stateID, string RtoLocationId, string PreFix) {
            this.GetCashInvoiceChallanAsync(strHsrp_stateID, RtoLocationId, PreFix, null);
        }
        
        /// <remarks/>
        public void GetCashInvoiceChallanAsync(string strHsrp_stateID, string RtoLocationId, string PreFix, object userState) {
            if ((this.GetCashInvoiceChallanOperationCompleted == null)) {
                this.GetCashInvoiceChallanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashInvoiceChallanOperationCompleted);
            }
            this.InvokeAsync("GetCashInvoiceChallan", new object[] {
                        strHsrp_stateID,
                        RtoLocationId,
                        PreFix}, this.GetCashInvoiceChallanOperationCompleted, userState);
        }
        
        private void OnGetCashInvoiceChallanOperationCompleted(object arg) {
            if ((this.GetCashInvoiceChallanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashInvoiceChallanCompleted(this, new GetCashInvoiceChallanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCashInvoiceChallan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCashInvoiceChallan(string RtoLocationId, string PreFix) {
            this.Invoke("UpdateCashInvoiceChallan", new object[] {
                        RtoLocationId,
                        PreFix});
        }
        
        /// <remarks/>
        public void UpdateCashInvoiceChallanAsync(string RtoLocationId, string PreFix) {
            this.UpdateCashInvoiceChallanAsync(RtoLocationId, PreFix, null);
        }
        
        /// <remarks/>
        public void UpdateCashInvoiceChallanAsync(string RtoLocationId, string PreFix, object userState) {
            if ((this.UpdateCashInvoiceChallanOperationCompleted == null)) {
                this.UpdateCashInvoiceChallanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCashInvoiceChallanOperationCompleted);
            }
            this.InvokeAsync("UpdateCashInvoiceChallan", new object[] {
                        RtoLocationId,
                        PreFix}, this.UpdateCashInvoiceChallanOperationCompleted, userState);
        }
        
        private void OnUpdateCashInvoiceChallanOperationCompleted(object arg) {
            if ((this.UpdateCashInvoiceChallanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCashInvoiceChallanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRtoAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRtoAddress(string HSRPStateID, string RtoLocationid) {
            object[] results = this.Invoke("GetRtoAddress", new object[] {
                        HSRPStateID,
                        RtoLocationid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRtoAddressAsync(string HSRPStateID, string RtoLocationid) {
            this.GetRtoAddressAsync(HSRPStateID, RtoLocationid, null);
        }
        
        /// <remarks/>
        public void GetRtoAddressAsync(string HSRPStateID, string RtoLocationid, object userState) {
            if ((this.GetRtoAddressOperationCompleted == null)) {
                this.GetRtoAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRtoAddressOperationCompleted);
            }
            this.InvokeAsync("GetRtoAddress", new object[] {
                        HSRPStateID,
                        RtoLocationid}, this.GetRtoAddressOperationCompleted, userState);
        }
        
        private void OnGetRtoAddressOperationCompleted(object arg) {
            if ((this.GetRtoAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRtoAddressCompleted(this, new GetRtoAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOrderType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("strOrderType")]
        public string CheckOrderType(string OrderType) {
            object[] results = this.Invoke("CheckOrderType", new object[] {
                        OrderType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOrderTypeAsync(string OrderType) {
            this.CheckOrderTypeAsync(OrderType, null);
        }
        
        /// <remarks/>
        public void CheckOrderTypeAsync(string OrderType, object userState) {
            if ((this.CheckOrderTypeOperationCompleted == null)) {
                this.CheckOrderTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOrderTypeOperationCompleted);
            }
            this.InvokeAsync("CheckOrderType", new object[] {
                        OrderType}, this.CheckOrderTypeOperationCompleted, userState);
        }
        
        private void OnCheckOrderTypeOperationCompleted(object arg) {
            if ((this.CheckOrderTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOrderTypeCompleted(this, new CheckOrderTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDuplicateEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDuplicateEntry(string HSRPStateID, string AuthNo, string VehicleRegNo, string OrderType) {
            object[] results = this.Invoke("CheckDuplicateEntry", new object[] {
                        HSRPStateID,
                        AuthNo,
                        VehicleRegNo,
                        OrderType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDuplicateEntryAsync(string HSRPStateID, string AuthNo, string VehicleRegNo, string OrderType) {
            this.CheckDuplicateEntryAsync(HSRPStateID, AuthNo, VehicleRegNo, OrderType, null);
        }
        
        /// <remarks/>
        public void CheckDuplicateEntryAsync(string HSRPStateID, string AuthNo, string VehicleRegNo, string OrderType, object userState) {
            if ((this.CheckDuplicateEntryOperationCompleted == null)) {
                this.CheckDuplicateEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDuplicateEntryOperationCompleted);
            }
            this.InvokeAsync("CheckDuplicateEntry", new object[] {
                        HSRPStateID,
                        AuthNo,
                        VehicleRegNo,
                        OrderType}, this.CheckDuplicateEntryOperationCompleted, userState);
        }
        
        private void OnCheckDuplicateEntryOperationCompleted(object arg) {
            if ((this.CheckDuplicateEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDuplicateEntryCompleted(this, new CheckDuplicateEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogInDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLogInDetail(string UserName, string Password, string MacAddress) {
            object[] results = this.Invoke("GetLogInDetail", new object[] {
                        UserName,
                        Password,
                        MacAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogInDetailAsync(string UserName, string Password, string MacAddress) {
            this.GetLogInDetailAsync(UserName, Password, MacAddress, null);
        }
        
        /// <remarks/>
        public void GetLogInDetailAsync(string UserName, string Password, string MacAddress, object userState) {
            if ((this.GetLogInDetailOperationCompleted == null)) {
                this.GetLogInDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogInDetailOperationCompleted);
            }
            this.InvokeAsync("GetLogInDetail", new object[] {
                        UserName,
                        Password,
                        MacAddress}, this.GetLogInDetailOperationCompleted, userState);
        }
        
        private void OnGetLogInDetailOperationCompleted(object arg) {
            if ((this.GetLogInDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogInDetailCompleted(this, new GetLogInDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CashReceiptForHR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CashReceiptForHR(string AuthNo) {
            object[] results = this.Invoke("CashReceiptForHR", new object[] {
                        AuthNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CashReceiptForHRAsync(string AuthNo) {
            this.CashReceiptForHRAsync(AuthNo, null);
        }
        
        /// <remarks/>
        public void CashReceiptForHRAsync(string AuthNo, object userState) {
            if ((this.CashReceiptForHROperationCompleted == null)) {
                this.CashReceiptForHROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCashReceiptForHROperationCompleted);
            }
            this.InvokeAsync("CashReceiptForHR", new object[] {
                        AuthNo}, this.CashReceiptForHROperationCompleted, userState);
        }
        
        private void OnCashReceiptForHROperationCompleted(object arg) {
            if ((this.CashReceiptForHRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CashReceiptForHRCompleted(this, new CashReceiptForHRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRateAndTaxDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRateAndTaxDetail(string StateID, string VehicleModel, string VehicleClass, string OrderType) {
            object[] results = this.Invoke("GetRateAndTaxDetail", new object[] {
                        StateID,
                        VehicleModel,
                        VehicleClass,
                        OrderType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRateAndTaxDetailAsync(string StateID, string VehicleModel, string VehicleClass, string OrderType) {
            this.GetRateAndTaxDetailAsync(StateID, VehicleModel, VehicleClass, OrderType, null);
        }
        
        /// <remarks/>
        public void GetRateAndTaxDetailAsync(string StateID, string VehicleModel, string VehicleClass, string OrderType, object userState) {
            if ((this.GetRateAndTaxDetailOperationCompleted == null)) {
                this.GetRateAndTaxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRateAndTaxDetailOperationCompleted);
            }
            this.InvokeAsync("GetRateAndTaxDetail", new object[] {
                        StateID,
                        VehicleModel,
                        VehicleClass,
                        OrderType}, this.GetRateAndTaxDetailOperationCompleted, userState);
        }
        
        private void OnGetRateAndTaxDetailOperationCompleted(object arg) {
            if ((this.GetRateAndTaxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRateAndTaxDetailCompleted(this, new GetRateAndTaxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRateAndTaxForVehicle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRateAndTaxForVehicle(string StateID, string VehicleType, string VehicleClass, string OrderType) {
            object[] results = this.Invoke("GetRateAndTaxForVehicle", new object[] {
                        StateID,
                        VehicleType,
                        VehicleClass,
                        OrderType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRateAndTaxForVehicleAsync(string StateID, string VehicleType, string VehicleClass, string OrderType) {
            this.GetRateAndTaxForVehicleAsync(StateID, VehicleType, VehicleClass, OrderType, null);
        }
        
        /// <remarks/>
        public void GetRateAndTaxForVehicleAsync(string StateID, string VehicleType, string VehicleClass, string OrderType, object userState) {
            if ((this.GetRateAndTaxForVehicleOperationCompleted == null)) {
                this.GetRateAndTaxForVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRateAndTaxForVehicleOperationCompleted);
            }
            this.InvokeAsync("GetRateAndTaxForVehicle", new object[] {
                        StateID,
                        VehicleType,
                        VehicleClass,
                        OrderType}, this.GetRateAndTaxForVehicleOperationCompleted, userState);
        }
        
        private void OnGetRateAndTaxForVehicleOperationCompleted(object arg) {
            if ((this.GetRateAndTaxForVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRateAndTaxForVehicleCompleted(this, new GetRateAndTaxForVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateVehicleType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PopulateVehicleType() {
            object[] results = this.Invoke("PopulateVehicleType", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateVehicleTypeAsync() {
            this.PopulateVehicleTypeAsync(null);
        }
        
        /// <remarks/>
        public void PopulateVehicleTypeAsync(object userState) {
            if ((this.PopulateVehicleTypeOperationCompleted == null)) {
                this.PopulateVehicleTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateVehicleTypeOperationCompleted);
            }
            this.InvokeAsync("PopulateVehicleType", new object[0], this.PopulateVehicleTypeOperationCompleted, userState);
        }
        
        private void OnPopulateVehicleTypeOperationCompleted(object arg) {
            if ((this.PopulateVehicleTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateVehicleTypeCompleted(this, new PopulateVehicleTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateVehicleModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PopulateVehicleModel(string VehiclMake) {
            object[] results = this.Invoke("PopulateVehicleModel", new object[] {
                        VehiclMake});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateVehicleModelAsync(string VehiclMake) {
            this.PopulateVehicleModelAsync(VehiclMake, null);
        }
        
        /// <remarks/>
        public void PopulateVehicleModelAsync(string VehiclMake, object userState) {
            if ((this.PopulateVehicleModelOperationCompleted == null)) {
                this.PopulateVehicleModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateVehicleModelOperationCompleted);
            }
            this.InvokeAsync("PopulateVehicleModel", new object[] {
                        VehiclMake}, this.PopulateVehicleModelOperationCompleted, userState);
        }
        
        private void OnPopulateVehicleModelOperationCompleted(object arg) {
            if ((this.PopulateVehicleModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateVehicleModelCompleted(this, new PopulateVehicleModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateVehicleMake", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PopulateVehicleMake() {
            object[] results = this.Invoke("PopulateVehicleMake", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateVehicleMakeAsync() {
            this.PopulateVehicleMakeAsync(null);
        }
        
        /// <remarks/>
        public void PopulateVehicleMakeAsync(object userState) {
            if ((this.PopulateVehicleMakeOperationCompleted == null)) {
                this.PopulateVehicleMakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateVehicleMakeOperationCompleted);
            }
            this.InvokeAsync("PopulateVehicleMake", new object[0], this.PopulateVehicleMakeOperationCompleted, userState);
        }
        
        private void OnPopulateVehicleMakeOperationCompleted(object arg) {
            if ((this.PopulateVehicleMakeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateVehicleMakeCompleted(this, new PopulateVehicleMakeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecordClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable RecordClosed(string VehicleRegNo) {
            object[] results = this.Invoke("RecordClosed", new object[] {
                        VehicleRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RecordClosedAsync(string VehicleRegNo) {
            this.RecordClosedAsync(VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void RecordClosedAsync(string VehicleRegNo, object userState) {
            if ((this.RecordClosedOperationCompleted == null)) {
                this.RecordClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordClosedOperationCompleted);
            }
            this.InvokeAsync("RecordClosed", new object[] {
                        VehicleRegNo}, this.RecordClosedOperationCompleted, userState);
        }
        
        private void OnRecordClosedOperationCompleted(object arg) {
            if ((this.RecordClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordClosedCompleted(this, new RecordClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecordNotClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable RecordNotClosed(string VehicleRegNo) {
            object[] results = this.Invoke("RecordNotClosed", new object[] {
                        VehicleRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RecordNotClosedAsync(string VehicleRegNo) {
            this.RecordNotClosedAsync(VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void RecordNotClosedAsync(string VehicleRegNo, object userState) {
            if ((this.RecordNotClosedOperationCompleted == null)) {
                this.RecordNotClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordNotClosedOperationCompleted);
            }
            this.InvokeAsync("RecordNotClosed", new object[] {
                        VehicleRegNo}, this.RecordNotClosedOperationCompleted, userState);
        }
        
        private void OnRecordNotClosedOperationCompleted(object arg) {
            if ((this.RecordNotClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordNotClosedCompleted(this, new RecordNotClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InventoryStatusF_NotNewOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InventoryStatusF_NotNewOrder(string Flaser) {
            object[] results = this.Invoke("InventoryStatusF_NotNewOrder", new object[] {
                        Flaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InventoryStatusF_NotNewOrderAsync(string Flaser) {
            this.InventoryStatusF_NotNewOrderAsync(Flaser, null);
        }
        
        /// <remarks/>
        public void InventoryStatusF_NotNewOrderAsync(string Flaser, object userState) {
            if ((this.InventoryStatusF_NotNewOrderOperationCompleted == null)) {
                this.InventoryStatusF_NotNewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventoryStatusF_NotNewOrderOperationCompleted);
            }
            this.InvokeAsync("InventoryStatusF_NotNewOrder", new object[] {
                        Flaser}, this.InventoryStatusF_NotNewOrderOperationCompleted, userState);
        }
        
        private void OnInventoryStatusF_NotNewOrderOperationCompleted(object arg) {
            if ((this.InventoryStatusF_NotNewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventoryStatusF_NotNewOrderCompleted(this, new InventoryStatusF_NotNewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InventoryStatusR_NotNewOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InventoryStatusR_NotNewOrder(string Rlaser) {
            object[] results = this.Invoke("InventoryStatusR_NotNewOrder", new object[] {
                        Rlaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InventoryStatusR_NotNewOrderAsync(string Rlaser) {
            this.InventoryStatusR_NotNewOrderAsync(Rlaser, null);
        }
        
        /// <remarks/>
        public void InventoryStatusR_NotNewOrderAsync(string Rlaser, object userState) {
            if ((this.InventoryStatusR_NotNewOrderOperationCompleted == null)) {
                this.InventoryStatusR_NotNewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventoryStatusR_NotNewOrderOperationCompleted);
            }
            this.InvokeAsync("InventoryStatusR_NotNewOrder", new object[] {
                        Rlaser}, this.InventoryStatusR_NotNewOrderOperationCompleted, userState);
        }
        
        private void OnInventoryStatusR_NotNewOrderOperationCompleted(object arg) {
            if ((this.InventoryStatusR_NotNewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventoryStatusR_NotNewOrderCompleted(this, new InventoryStatusR_NotNewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InventoryStatusF_NewOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InventoryStatusF_NewOrder(string Flaser) {
            object[] results = this.Invoke("InventoryStatusF_NewOrder", new object[] {
                        Flaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InventoryStatusF_NewOrderAsync(string Flaser) {
            this.InventoryStatusF_NewOrderAsync(Flaser, null);
        }
        
        /// <remarks/>
        public void InventoryStatusF_NewOrderAsync(string Flaser, object userState) {
            if ((this.InventoryStatusF_NewOrderOperationCompleted == null)) {
                this.InventoryStatusF_NewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventoryStatusF_NewOrderOperationCompleted);
            }
            this.InvokeAsync("InventoryStatusF_NewOrder", new object[] {
                        Flaser}, this.InventoryStatusF_NewOrderOperationCompleted, userState);
        }
        
        private void OnInventoryStatusF_NewOrderOperationCompleted(object arg) {
            if ((this.InventoryStatusF_NewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventoryStatusF_NewOrderCompleted(this, new InventoryStatusF_NewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InventoryStatusR_NewOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InventoryStatusR_NewOrder(string Rlaser) {
            object[] results = this.Invoke("InventoryStatusR_NewOrder", new object[] {
                        Rlaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InventoryStatusR_NewOrderAsync(string Rlaser) {
            this.InventoryStatusR_NewOrderAsync(Rlaser, null);
        }
        
        /// <remarks/>
        public void InventoryStatusR_NewOrderAsync(string Rlaser, object userState) {
            if ((this.InventoryStatusR_NewOrderOperationCompleted == null)) {
                this.InventoryStatusR_NewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventoryStatusR_NewOrderOperationCompleted);
            }
            this.InvokeAsync("InventoryStatusR_NewOrder", new object[] {
                        Rlaser}, this.InventoryStatusR_NewOrderOperationCompleted, userState);
        }
        
        private void OnInventoryStatusR_NewOrderOperationCompleted(object arg) {
            if ((this.InventoryStatusR_NewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventoryStatusR_NewOrderCompleted(this, new InventoryStatusR_NewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FrontValidation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FrontValidation(string Flaser) {
            object[] results = this.Invoke("FrontValidation", new object[] {
                        Flaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FrontValidationAsync(string Flaser) {
            this.FrontValidationAsync(Flaser, null);
        }
        
        /// <remarks/>
        public void FrontValidationAsync(string Flaser, object userState) {
            if ((this.FrontValidationOperationCompleted == null)) {
                this.FrontValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFrontValidationOperationCompleted);
            }
            this.InvokeAsync("FrontValidation", new object[] {
                        Flaser}, this.FrontValidationOperationCompleted, userState);
        }
        
        private void OnFrontValidationOperationCompleted(object arg) {
            if ((this.FrontValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FrontValidationCompleted(this, new FrontValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RearValidation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RearValidation(string Rlaser) {
            object[] results = this.Invoke("RearValidation", new object[] {
                        Rlaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RearValidationAsync(string Rlaser) {
            this.RearValidationAsync(Rlaser, null);
        }
        
        /// <remarks/>
        public void RearValidationAsync(string Rlaser, object userState) {
            if ((this.RearValidationOperationCompleted == null)) {
                this.RearValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRearValidationOperationCompleted);
            }
            this.InvokeAsync("RearValidation", new object[] {
                        Rlaser}, this.RearValidationOperationCompleted, userState);
        }
        
        private void OnRearValidationOperationCompleted(object arg) {
            if ((this.RearValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RearValidationCompleted(this, new RearValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderStatusNotClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable OrderStatusNotClosed(string VehiclRegNo) {
            object[] results = this.Invoke("OrderStatusNotClosed", new object[] {
                        VehiclRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OrderStatusNotClosedAsync(string VehiclRegNo) {
            this.OrderStatusNotClosedAsync(VehiclRegNo, null);
        }
        
        /// <remarks/>
        public void OrderStatusNotClosedAsync(string VehiclRegNo, object userState) {
            if ((this.OrderStatusNotClosedOperationCompleted == null)) {
                this.OrderStatusNotClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderStatusNotClosedOperationCompleted);
            }
            this.InvokeAsync("OrderStatusNotClosed", new object[] {
                        VehiclRegNo}, this.OrderStatusNotClosedOperationCompleted, userState);
        }
        
        private void OnOrderStatusNotClosedOperationCompleted(object arg) {
            if ((this.OrderStatusNotClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderStatusNotClosedCompleted(this, new OrderStatusNotClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderStatusEmbossingDone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OrderStatusEmbossingDone(string Flaser, string Rlaser, string VehicleRegNo) {
            object[] results = this.Invoke("OrderStatusEmbossingDone", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OrderStatusEmbossingDoneAsync(string Flaser, string Rlaser, string VehicleRegNo) {
            this.OrderStatusEmbossingDoneAsync(Flaser, Rlaser, VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void OrderStatusEmbossingDoneAsync(string Flaser, string Rlaser, string VehicleRegNo, object userState) {
            if ((this.OrderStatusEmbossingDoneOperationCompleted == null)) {
                this.OrderStatusEmbossingDoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderStatusEmbossingDoneOperationCompleted);
            }
            this.InvokeAsync("OrderStatusEmbossingDone", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo}, this.OrderStatusEmbossingDoneOperationCompleted, userState);
        }
        
        private void OnOrderStatusEmbossingDoneOperationCompleted(object arg) {
            if ((this.OrderStatusEmbossingDoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderStatusEmbossingDoneCompleted(this, new OrderStatusEmbossingDoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderStatusEmbossingDoneUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OrderStatusEmbossingDoneUpdate(string Flaser, string Rlaser, string VehicleRegNo) {
            object[] results = this.Invoke("OrderStatusEmbossingDoneUpdate", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OrderStatusEmbossingDoneUpdateAsync(string Flaser, string Rlaser, string VehicleRegNo) {
            this.OrderStatusEmbossingDoneUpdateAsync(Flaser, Rlaser, VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void OrderStatusEmbossingDoneUpdateAsync(string Flaser, string Rlaser, string VehicleRegNo, object userState) {
            if ((this.OrderStatusEmbossingDoneUpdateOperationCompleted == null)) {
                this.OrderStatusEmbossingDoneUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderStatusEmbossingDoneUpdateOperationCompleted);
            }
            this.InvokeAsync("OrderStatusEmbossingDoneUpdate", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo}, this.OrderStatusEmbossingDoneUpdateOperationCompleted, userState);
        }
        
        private void OnOrderStatusEmbossingDoneUpdateOperationCompleted(object arg) {
            if ((this.OrderStatusEmbossingDoneUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderStatusEmbossingDoneUpdateCompleted(this, new OrderStatusEmbossingDoneUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderStatusNewOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OrderStatusNewOrder(string Flaser, string Rlaser, string VehicleRegNo) {
            object[] results = this.Invoke("OrderStatusNewOrder", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OrderStatusNewOrderAsync(string Flaser, string Rlaser, string VehicleRegNo) {
            this.OrderStatusNewOrderAsync(Flaser, Rlaser, VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void OrderStatusNewOrderAsync(string Flaser, string Rlaser, string VehicleRegNo, object userState) {
            if ((this.OrderStatusNewOrderOperationCompleted == null)) {
                this.OrderStatusNewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderStatusNewOrderOperationCompleted);
            }
            this.InvokeAsync("OrderStatusNewOrder", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo}, this.OrderStatusNewOrderOperationCompleted, userState);
        }
        
        private void OnOrderStatusNewOrderOperationCompleted(object arg) {
            if ((this.OrderStatusNewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderStatusNewOrderCompleted(this, new OrderStatusNewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderStatusNewOrderUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OrderStatusNewOrderUpdate(string Flaser, string Rlaser, string VehicleRegNo) {
            object[] results = this.Invoke("OrderStatusNewOrderUpdate", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OrderStatusNewOrderUpdateAsync(string Flaser, string Rlaser, string VehicleRegNo) {
            this.OrderStatusNewOrderUpdateAsync(Flaser, Rlaser, VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void OrderStatusNewOrderUpdateAsync(string Flaser, string Rlaser, string VehicleRegNo, object userState) {
            if ((this.OrderStatusNewOrderUpdateOperationCompleted == null)) {
                this.OrderStatusNewOrderUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderStatusNewOrderUpdateOperationCompleted);
            }
            this.InvokeAsync("OrderStatusNewOrderUpdate", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo}, this.OrderStatusNewOrderUpdateOperationCompleted, userState);
        }
        
        private void OnOrderStatusNewOrderUpdateOperationCompleted(object arg) {
            if ((this.OrderStatusNewOrderUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderStatusNewOrderUpdateCompleted(this, new OrderStatusNewOrderUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Embossing_Validate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Embossing_Validate(string VehiclRegNo) {
            object[] results = this.Invoke("Embossing_Validate", new object[] {
                        VehiclRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Embossing_ValidateAsync(string VehiclRegNo) {
            this.Embossing_ValidateAsync(VehiclRegNo, null);
        }
        
        /// <remarks/>
        public void Embossing_ValidateAsync(string VehiclRegNo, object userState) {
            if ((this.Embossing_ValidateOperationCompleted == null)) {
                this.Embossing_ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmbossing_ValidateOperationCompleted);
            }
            this.InvokeAsync("Embossing_Validate", new object[] {
                        VehiclRegNo}, this.Embossing_ValidateOperationCompleted, userState);
        }
        
        private void OnEmbossing_ValidateOperationCompleted(object arg) {
            if ((this.Embossing_ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Embossing_ValidateCompleted(this, new Embossing_ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Embossing_OrderStatusNotClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Embossing_OrderStatusNotClosed(string VehiclRegNo) {
            object[] results = this.Invoke("Embossing_OrderStatusNotClosed", new object[] {
                        VehiclRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Embossing_OrderStatusNotClosedAsync(string VehiclRegNo) {
            this.Embossing_OrderStatusNotClosedAsync(VehiclRegNo, null);
        }
        
        /// <remarks/>
        public void Embossing_OrderStatusNotClosedAsync(string VehiclRegNo, object userState) {
            if ((this.Embossing_OrderStatusNotClosedOperationCompleted == null)) {
                this.Embossing_OrderStatusNotClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmbossing_OrderStatusNotClosedOperationCompleted);
            }
            this.InvokeAsync("Embossing_OrderStatusNotClosed", new object[] {
                        VehiclRegNo}, this.Embossing_OrderStatusNotClosedOperationCompleted, userState);
        }
        
        private void OnEmbossing_OrderStatusNotClosedOperationCompleted(object arg) {
            if ((this.Embossing_OrderStatusNotClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Embossing_OrderStatusNotClosedCompleted(this, new Embossing_OrderStatusNotClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/E_OrderStatusEmbossingDone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int E_OrderStatusEmbossingDone(string Flaser, string Rlaser, string VehicleRegNo) {
            object[] results = this.Invoke("E_OrderStatusEmbossingDone", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void E_OrderStatusEmbossingDoneAsync(string Flaser, string Rlaser, string VehicleRegNo) {
            this.E_OrderStatusEmbossingDoneAsync(Flaser, Rlaser, VehicleRegNo, null);
        }
        
        /// <remarks/>
        public void E_OrderStatusEmbossingDoneAsync(string Flaser, string Rlaser, string VehicleRegNo, object userState) {
            if ((this.E_OrderStatusEmbossingDoneOperationCompleted == null)) {
                this.E_OrderStatusEmbossingDoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnE_OrderStatusEmbossingDoneOperationCompleted);
            }
            this.InvokeAsync("E_OrderStatusEmbossingDone", new object[] {
                        Flaser,
                        Rlaser,
                        VehicleRegNo}, this.E_OrderStatusEmbossingDoneOperationCompleted, userState);
        }
        
        private void OnE_OrderStatusEmbossingDoneOperationCompleted(object arg) {
            if ((this.E_OrderStatusEmbossingDoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.E_OrderStatusEmbossingDoneCompleted(this, new E_OrderStatusEmbossingDoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Embossing_RtoInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Embossing_RtoInventory(string Flaser, string Rlaser) {
            object[] results = this.Invoke("Embossing_RtoInventory", new object[] {
                        Flaser,
                        Rlaser});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Embossing_RtoInventoryAsync(string Flaser, string Rlaser) {
            this.Embossing_RtoInventoryAsync(Flaser, Rlaser, null);
        }
        
        /// <remarks/>
        public void Embossing_RtoInventoryAsync(string Flaser, string Rlaser, object userState) {
            if ((this.Embossing_RtoInventoryOperationCompleted == null)) {
                this.Embossing_RtoInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmbossing_RtoInventoryOperationCompleted);
            }
            this.InvokeAsync("Embossing_RtoInventory", new object[] {
                        Flaser,
                        Rlaser}, this.Embossing_RtoInventoryOperationCompleted, userState);
        }
        
        private void OnEmbossing_RtoInventoryOperationCompleted(object arg) {
            if ((this.Embossing_RtoInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Embossing_RtoInventoryCompleted(this, new Embossing_RtoInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Chalan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Chalan(string StateId) {
            object[] results = this.Invoke("Chalan", new object[] {
                        StateId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ChalanAsync(string StateId) {
            this.ChalanAsync(StateId, null);
        }
        
        /// <remarks/>
        public void ChalanAsync(string StateId, object userState) {
            if ((this.ChalanOperationCompleted == null)) {
                this.ChalanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChalanOperationCompleted);
            }
            this.InvokeAsync("Chalan", new object[] {
                        StateId}, this.ChalanOperationCompleted, userState);
        }
        
        private void OnChalanOperationCompleted(object arg) {
            if ((this.ChalanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChalanCompleted(this, new ChalanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSMSLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSMSLog(string strHSRP_StateId, string strMobileNo, string strRegNo, string strAuthNo, string strHsrp_Flag, string strSmsText, string smsresponseid, string smsresponsetext) {
            this.Invoke("SaveSMSLog", new object[] {
                        strHSRP_StateId,
                        strMobileNo,
                        strRegNo,
                        strAuthNo,
                        strHsrp_Flag,
                        strSmsText,
                        smsresponseid,
                        smsresponsetext});
        }
        
        /// <remarks/>
        public void SaveSMSLogAsync(string strHSRP_StateId, string strMobileNo, string strRegNo, string strAuthNo, string strHsrp_Flag, string strSmsText, string smsresponseid, string smsresponsetext) {
            this.SaveSMSLogAsync(strHSRP_StateId, strMobileNo, strRegNo, strAuthNo, strHsrp_Flag, strSmsText, smsresponseid, smsresponsetext, null);
        }
        
        /// <remarks/>
        public void SaveSMSLogAsync(string strHSRP_StateId, string strMobileNo, string strRegNo, string strAuthNo, string strHsrp_Flag, string strSmsText, string smsresponseid, string smsresponsetext, object userState) {
            if ((this.SaveSMSLogOperationCompleted == null)) {
                this.SaveSMSLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSMSLogOperationCompleted);
            }
            this.InvokeAsync("SaveSMSLog", new object[] {
                        strHSRP_StateId,
                        strMobileNo,
                        strRegNo,
                        strAuthNo,
                        strHsrp_Flag,
                        strSmsText,
                        smsresponseid,
                        smsresponsetext}, this.SaveSMSLogOperationCompleted, userState);
        }
        
        private void OnSaveSMSLogOperationCompleted(object arg) {
            if ((this.SaveSMSLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSMSLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeatilsUsingVehcileRegNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDeatilsUsingVehcileRegNo(string HsrpStateID, string VehicleRegno) {
            object[] results = this.Invoke("GetDeatilsUsingVehcileRegNo", new object[] {
                        HsrpStateID,
                        VehicleRegno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeatilsUsingVehcileRegNoAsync(string HsrpStateID, string VehicleRegno) {
            this.GetDeatilsUsingVehcileRegNoAsync(HsrpStateID, VehicleRegno, null);
        }
        
        /// <remarks/>
        public void GetDeatilsUsingVehcileRegNoAsync(string HsrpStateID, string VehicleRegno, object userState) {
            if ((this.GetDeatilsUsingVehcileRegNoOperationCompleted == null)) {
                this.GetDeatilsUsingVehcileRegNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeatilsUsingVehcileRegNoOperationCompleted);
            }
            this.InvokeAsync("GetDeatilsUsingVehcileRegNo", new object[] {
                        HsrpStateID,
                        VehicleRegno}, this.GetDeatilsUsingVehcileRegNoOperationCompleted, userState);
        }
        
        private void OnGetDeatilsUsingVehcileRegNoOperationCompleted(object arg) {
            if ((this.GetDeatilsUsingVehcileRegNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeatilsUsingVehcileRegNoCompleted(this, new GetDeatilsUsingVehcileRegNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeatilsUsingVehcileRegNoForClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDeatilsUsingVehcileRegNoForClosed(string HsrpStateID, string VehicleRegno) {
            object[] results = this.Invoke("GetDeatilsUsingVehcileRegNoForClosed", new object[] {
                        HsrpStateID,
                        VehicleRegno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeatilsUsingVehcileRegNoForClosedAsync(string HsrpStateID, string VehicleRegno) {
            this.GetDeatilsUsingVehcileRegNoForClosedAsync(HsrpStateID, VehicleRegno, null);
        }
        
        /// <remarks/>
        public void GetDeatilsUsingVehcileRegNoForClosedAsync(string HsrpStateID, string VehicleRegno, object userState) {
            if ((this.GetDeatilsUsingVehcileRegNoForClosedOperationCompleted == null)) {
                this.GetDeatilsUsingVehcileRegNoForClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeatilsUsingVehcileRegNoForClosedOperationCompleted);
            }
            this.InvokeAsync("GetDeatilsUsingVehcileRegNoForClosed", new object[] {
                        HsrpStateID,
                        VehicleRegno}, this.GetDeatilsUsingVehcileRegNoForClosedOperationCompleted, userState);
        }
        
        private void OnGetDeatilsUsingVehcileRegNoForClosedOperationCompleted(object arg) {
            if ((this.GetDeatilsUsingVehcileRegNoForClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeatilsUsingVehcileRegNoForClosedCompleted(this, new GetDeatilsUsingVehcileRegNoForClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOrderstatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckOrderstatus(string strHsrpStateID, string strVehicleReg) {
            object[] results = this.Invoke("CheckOrderstatus", new object[] {
                        strHsrpStateID,
                        strVehicleReg});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOrderstatusAsync(string strHsrpStateID, string strVehicleReg) {
            this.CheckOrderstatusAsync(strHsrpStateID, strVehicleReg, null);
        }
        
        /// <remarks/>
        public void CheckOrderstatusAsync(string strHsrpStateID, string strVehicleReg, object userState) {
            if ((this.CheckOrderstatusOperationCompleted == null)) {
                this.CheckOrderstatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOrderstatusOperationCompleted);
            }
            this.InvokeAsync("CheckOrderstatus", new object[] {
                        strHsrpStateID,
                        strVehicleReg}, this.CheckOrderstatusOperationCompleted, userState);
        }
        
        private void OnCheckOrderstatusOperationCompleted(object arg) {
            if ((this.CheckOrderstatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOrderstatusCompleted(this, new CheckOrderstatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOrderstatusForEmbossing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckOrderstatusForEmbossing(string strHsrpStateID, string strVehicleReg) {
            object[] results = this.Invoke("CheckOrderstatusForEmbossing", new object[] {
                        strHsrpStateID,
                        strVehicleReg});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOrderstatusForEmbossingAsync(string strHsrpStateID, string strVehicleReg) {
            this.CheckOrderstatusForEmbossingAsync(strHsrpStateID, strVehicleReg, null);
        }
        
        /// <remarks/>
        public void CheckOrderstatusForEmbossingAsync(string strHsrpStateID, string strVehicleReg, object userState) {
            if ((this.CheckOrderstatusForEmbossingOperationCompleted == null)) {
                this.CheckOrderstatusForEmbossingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOrderstatusForEmbossingOperationCompleted);
            }
            this.InvokeAsync("CheckOrderstatusForEmbossing", new object[] {
                        strHsrpStateID,
                        strVehicleReg}, this.CheckOrderstatusForEmbossingOperationCompleted, userState);
        }
        
        private void OnCheckOrderstatusForEmbossingOperationCompleted(object arg) {
            if ((this.CheckOrderstatusForEmbossingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOrderstatusForEmbossingCompleted(this, new CheckOrderstatusForEmbossingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLaserCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateLaserCode(string FrontLaserNo, string RearLaserCode) {
            object[] results = this.Invoke("ValidateLaserCode", new object[] {
                        FrontLaserNo,
                        RearLaserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLaserCodeAsync(string FrontLaserNo, string RearLaserCode) {
            this.ValidateLaserCodeAsync(FrontLaserNo, RearLaserCode, null);
        }
        
        /// <remarks/>
        public void ValidateLaserCodeAsync(string FrontLaserNo, string RearLaserCode, object userState) {
            if ((this.ValidateLaserCodeOperationCompleted == null)) {
                this.ValidateLaserCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLaserCodeOperationCompleted);
            }
            this.InvokeAsync("ValidateLaserCode", new object[] {
                        FrontLaserNo,
                        RearLaserCode}, this.ValidateLaserCodeOperationCompleted, userState);
        }
        
        private void OnValidateLaserCodeOperationCompleted(object arg) {
            if ((this.ValidateLaserCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLaserCodeCompleted(this, new ValidateLaserCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLaserCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLaserCode(string hsrpStateid, string VehicleRegno, string ordertype, string FrontLaser, string Rearlaser) {
            object[] results = this.Invoke("UpdateLaserCode", new object[] {
                        hsrpStateid,
                        VehicleRegno,
                        ordertype,
                        FrontLaser,
                        Rearlaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLaserCodeAsync(string hsrpStateid, string VehicleRegno, string ordertype, string FrontLaser, string Rearlaser) {
            this.UpdateLaserCodeAsync(hsrpStateid, VehicleRegno, ordertype, FrontLaser, Rearlaser, null);
        }
        
        /// <remarks/>
        public void UpdateLaserCodeAsync(string hsrpStateid, string VehicleRegno, string ordertype, string FrontLaser, string Rearlaser, object userState) {
            if ((this.UpdateLaserCodeOperationCompleted == null)) {
                this.UpdateLaserCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLaserCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateLaserCode", new object[] {
                        hsrpStateid,
                        VehicleRegno,
                        ordertype,
                        FrontLaser,
                        Rearlaser}, this.UpdateLaserCodeOperationCompleted, userState);
        }
        
        private void OnUpdateLaserCodeOperationCompleted(object arg) {
            if ((this.UpdateLaserCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLaserCodeCompleted(this, new UpdateLaserCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLaserInHsrpRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLaserInHsrpRecords(string strOrederType, string strFrontLaser, string strRearlaser) {
            object[] results = this.Invoke("CheckLaserInHsrpRecords", new object[] {
                        strOrederType,
                        strFrontLaser,
                        strRearlaser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLaserInHsrpRecordsAsync(string strOrederType, string strFrontLaser, string strRearlaser) {
            this.CheckLaserInHsrpRecordsAsync(strOrederType, strFrontLaser, strRearlaser, null);
        }
        
        /// <remarks/>
        public void CheckLaserInHsrpRecordsAsync(string strOrederType, string strFrontLaser, string strRearlaser, object userState) {
            if ((this.CheckLaserInHsrpRecordsOperationCompleted == null)) {
                this.CheckLaserInHsrpRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLaserInHsrpRecordsOperationCompleted);
            }
            this.InvokeAsync("CheckLaserInHsrpRecords", new object[] {
                        strOrederType,
                        strFrontLaser,
                        strRearlaser}, this.CheckLaserInHsrpRecordsOperationCompleted, userState);
        }
        
        private void OnCheckLaserInHsrpRecordsOperationCompleted(object arg) {
            if ((this.CheckLaserInHsrpRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLaserInHsrpRecordsCompleted(this, new CheckLaserInHsrpRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClosedorder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateClosedorder(string strHsrpStateID, string strRegno, string strFront, string strRear) {
            object[] results = this.Invoke("UpdateClosedorder", new object[] {
                        strHsrpStateID,
                        strRegno,
                        strFront,
                        strRear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClosedorderAsync(string strHsrpStateID, string strRegno, string strFront, string strRear) {
            this.UpdateClosedorderAsync(strHsrpStateID, strRegno, strFront, strRear, null);
        }
        
        /// <remarks/>
        public void UpdateClosedorderAsync(string strHsrpStateID, string strRegno, string strFront, string strRear, object userState) {
            if ((this.UpdateClosedorderOperationCompleted == null)) {
                this.UpdateClosedorderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClosedorderOperationCompleted);
            }
            this.InvokeAsync("UpdateClosedorder", new object[] {
                        strHsrpStateID,
                        strRegno,
                        strFront,
                        strRear}, this.UpdateClosedorderOperationCompleted, userState);
        }
        
        private void OnUpdateClosedorderOperationCompleted(object arg) {
            if ((this.UpdateClosedorderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClosedorderCompleted(this, new UpdateClosedorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHpSmsLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateHpSmsLog(string strMobileNo, string strMessage, string strResult, string strAuthNo) {
            object[] results = this.Invoke("UpdateHpSmsLog", new object[] {
                        strMobileNo,
                        strMessage,
                        strResult,
                        strAuthNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHpSmsLogAsync(string strMobileNo, string strMessage, string strResult, string strAuthNo) {
            this.UpdateHpSmsLogAsync(strMobileNo, strMessage, strResult, strAuthNo, null);
        }
        
        /// <remarks/>
        public void UpdateHpSmsLogAsync(string strMobileNo, string strMessage, string strResult, string strAuthNo, object userState) {
            if ((this.UpdateHpSmsLogOperationCompleted == null)) {
                this.UpdateHpSmsLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHpSmsLogOperationCompleted);
            }
            this.InvokeAsync("UpdateHpSmsLog", new object[] {
                        strMobileNo,
                        strMessage,
                        strResult,
                        strAuthNo}, this.UpdateHpSmsLogOperationCompleted, userState);
        }
        
        private void OnUpdateHpSmsLogOperationCompleted(object arg) {
            if ((this.UpdateHpSmsLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHpSmsLogCompleted(this, new UpdateHpSmsLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHpSmsLogOnClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateHpSmsLogOnClosed(string strMobileNo, string strMessage, string strResult, string strAuthNo) {
            object[] results = this.Invoke("UpdateHpSmsLogOnClosed", new object[] {
                        strMobileNo,
                        strMessage,
                        strResult,
                        strAuthNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHpSmsLogOnClosedAsync(string strMobileNo, string strMessage, string strResult, string strAuthNo) {
            this.UpdateHpSmsLogOnClosedAsync(strMobileNo, strMessage, strResult, strAuthNo, null);
        }
        
        /// <remarks/>
        public void UpdateHpSmsLogOnClosedAsync(string strMobileNo, string strMessage, string strResult, string strAuthNo, object userState) {
            if ((this.UpdateHpSmsLogOnClosedOperationCompleted == null)) {
                this.UpdateHpSmsLogOnClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHpSmsLogOnClosedOperationCompleted);
            }
            this.InvokeAsync("UpdateHpSmsLogOnClosed", new object[] {
                        strMobileNo,
                        strMessage,
                        strResult,
                        strAuthNo}, this.UpdateHpSmsLogOnClosedOperationCompleted, userState);
        }
        
        private void OnUpdateHpSmsLogOnClosedOperationCompleted(object arg) {
            if ((this.UpdateHpSmsLogOnClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHpSmsLogOnClosedCompleted(this, new UpdateHpSmsLogOnClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReportData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReportData(string strhsrpStateid, string strRtoLocationId, string strStartDate, string strEndDate) {
            object[] results = this.Invoke("getReportData", new object[] {
                        strhsrpStateid,
                        strRtoLocationId,
                        strStartDate,
                        strEndDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReportDataAsync(string strhsrpStateid, string strRtoLocationId, string strStartDate, string strEndDate) {
            this.getReportDataAsync(strhsrpStateid, strRtoLocationId, strStartDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void getReportDataAsync(string strhsrpStateid, string strRtoLocationId, string strStartDate, string strEndDate, object userState) {
            if ((this.getReportDataOperationCompleted == null)) {
                this.getReportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportDataOperationCompleted);
            }
            this.InvokeAsync("getReportData", new object[] {
                        strhsrpStateid,
                        strRtoLocationId,
                        strStartDate,
                        strEndDate}, this.getReportDataOperationCompleted, userState);
        }
        
        private void OngetReportDataOperationCompleted(object arg) {
            if ((this.getReportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportDataCompleted(this, new getReportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateFourthSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateFourthSms(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult) {
            this.Invoke("updateFourthSms", new object[] {
                        strHsrp_stateid,
                        strVehicleRegNo,
                        strMessage,
                        strResult});
        }
        
        /// <remarks/>
        public void updateFourthSmsAsync(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult) {
            this.updateFourthSmsAsync(strHsrp_stateid, strVehicleRegNo, strMessage, strResult, null);
        }
        
        /// <remarks/>
        public void updateFourthSmsAsync(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult, object userState) {
            if ((this.updateFourthSmsOperationCompleted == null)) {
                this.updateFourthSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFourthSmsOperationCompleted);
            }
            this.InvokeAsync("updateFourthSms", new object[] {
                        strHsrp_stateid,
                        strVehicleRegNo,
                        strMessage,
                        strResult}, this.updateFourthSmsOperationCompleted, userState);
        }
        
        private void OnupdateFourthSmsOperationCompleted(object arg) {
            if ((this.updateFourthSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFourthSmsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateFifthSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateFifthSms(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult) {
            this.Invoke("updateFifthSms", new object[] {
                        strHsrp_stateid,
                        strVehicleRegNo,
                        strMessage,
                        strResult});
        }
        
        /// <remarks/>
        public void updateFifthSmsAsync(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult) {
            this.updateFifthSmsAsync(strHsrp_stateid, strVehicleRegNo, strMessage, strResult, null);
        }
        
        /// <remarks/>
        public void updateFifthSmsAsync(string strHsrp_stateid, string strVehicleRegNo, string strMessage, string strResult, object userState) {
            if ((this.updateFifthSmsOperationCompleted == null)) {
                this.updateFifthSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFifthSmsOperationCompleted);
            }
            this.InvokeAsync("updateFifthSms", new object[] {
                        strHsrp_stateid,
                        strVehicleRegNo,
                        strMessage,
                        strResult}, this.updateFifthSmsOperationCompleted, userState);
        }
        
        private void OnupdateFifthSmsOperationCompleted(object arg) {
            if ((this.updateFifthSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFifthSmsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLaserCodeForOrderClose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateLaserCodeForOrderClose(string FrontLaserNo, string RearLaserCode) {
            object[] results = this.Invoke("ValidateLaserCodeForOrderClose", new object[] {
                        FrontLaserNo,
                        RearLaserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLaserCodeForOrderCloseAsync(string FrontLaserNo, string RearLaserCode) {
            this.ValidateLaserCodeForOrderCloseAsync(FrontLaserNo, RearLaserCode, null);
        }
        
        /// <remarks/>
        public void ValidateLaserCodeForOrderCloseAsync(string FrontLaserNo, string RearLaserCode, object userState) {
            if ((this.ValidateLaserCodeForOrderCloseOperationCompleted == null)) {
                this.ValidateLaserCodeForOrderCloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLaserCodeForOrderCloseOperationCompleted);
            }
            this.InvokeAsync("ValidateLaserCodeForOrderClose", new object[] {
                        FrontLaserNo,
                        RearLaserCode}, this.ValidateLaserCodeForOrderCloseOperationCompleted, userState);
        }
        
        private void OnValidateLaserCodeForOrderCloseOperationCompleted(object arg) {
            if ((this.ValidateLaserCodeForOrderCloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLaserCodeForOrderCloseCompleted(this, new ValidateLaserCodeForOrderCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillRTODropDown", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FillRTODropDown(string strStateID) {
            object[] results = this.Invoke("FillRTODropDown", new object[] {
                        strStateID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FillRTODropDownAsync(string strStateID) {
            this.FillRTODropDownAsync(strStateID, null);
        }
        
        /// <remarks/>
        public void FillRTODropDownAsync(string strStateID, object userState) {
            if ((this.FillRTODropDownOperationCompleted == null)) {
                this.FillRTODropDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillRTODropDownOperationCompleted);
            }
            this.InvokeAsync("FillRTODropDown", new object[] {
                        strStateID}, this.FillRTODropDownOperationCompleted, userState);
        }
        
        private void OnFillRTODropDownOperationCompleted(object arg) {
            if ((this.FillRTODropDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillRTODropDownCompleted(this, new FillRTODropDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRTO_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRTO_ID(string strStateID, string strNICcode) {
            object[] results = this.Invoke("GetRTO_ID", new object[] {
                        strStateID,
                        strNICcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRTO_IDAsync(string strStateID, string strNICcode) {
            this.GetRTO_IDAsync(strStateID, strNICcode, null);
        }
        
        /// <remarks/>
        public void GetRTO_IDAsync(string strStateID, string strNICcode, object userState) {
            if ((this.GetRTO_IDOperationCompleted == null)) {
                this.GetRTO_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRTO_IDOperationCompleted);
            }
            this.InvokeAsync("GetRTO_ID", new object[] {
                        strStateID,
                        strNICcode}, this.GetRTO_IDOperationCompleted, userState);
        }
        
        private void OnGetRTO_IDOperationCompleted(object arg) {
            if ((this.GetRTO_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRTO_IDCompleted(this, new GetRTO_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertData(string strRTOLocationID, string strVehicleNo, string strChassisNo, string strOrdertype, string strNICRTOCode, string strUserId) {
            object[] results = this.Invoke("InsertData", new object[] {
                        strRTOLocationID,
                        strVehicleNo,
                        strChassisNo,
                        strOrdertype,
                        strNICRTOCode,
                        strUserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataAsync(string strRTOLocationID, string strVehicleNo, string strChassisNo, string strOrdertype, string strNICRTOCode, string strUserId) {
            this.InsertDataAsync(strRTOLocationID, strVehicleNo, strChassisNo, strOrdertype, strNICRTOCode, strUserId, null);
        }
        
        /// <remarks/>
        public void InsertDataAsync(string strRTOLocationID, string strVehicleNo, string strChassisNo, string strOrdertype, string strNICRTOCode, string strUserId, object userState) {
            if ((this.InsertDataOperationCompleted == null)) {
                this.InsertDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataOperationCompleted);
            }
            this.InvokeAsync("InsertData", new object[] {
                        strRTOLocationID,
                        strVehicleNo,
                        strChassisNo,
                        strOrdertype,
                        strNICRTOCode,
                        strUserId}, this.InsertDataOperationCompleted, userState);
        }
        
        private void OnInsertDataOperationCompleted(object arg) {
            if ((this.InsertDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataCompleted(this, new InsertDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDuplicateRecordInHP_PortabilityData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDuplicateRecordInHP_PortabilityData(string strVehicleReg) {
            object[] results = this.Invoke("CheckDuplicateRecordInHP_PortabilityData", new object[] {
                        strVehicleReg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDuplicateRecordInHP_PortabilityDataAsync(string strVehicleReg) {
            this.CheckDuplicateRecordInHP_PortabilityDataAsync(strVehicleReg, null);
        }
        
        /// <remarks/>
        public void CheckDuplicateRecordInHP_PortabilityDataAsync(string strVehicleReg, object userState) {
            if ((this.CheckDuplicateRecordInHP_PortabilityDataOperationCompleted == null)) {
                this.CheckDuplicateRecordInHP_PortabilityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDuplicateRecordInHP_PortabilityDataOperationCompleted);
            }
            this.InvokeAsync("CheckDuplicateRecordInHP_PortabilityData", new object[] {
                        strVehicleReg}, this.CheckDuplicateRecordInHP_PortabilityDataOperationCompleted, userState);
        }
        
        private void OnCheckDuplicateRecordInHP_PortabilityDataOperationCompleted(object arg) {
            if ((this.CheckDuplicateRecordInHP_PortabilityDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDuplicateRecordInHP_PortabilityDataCompleted(this, new CheckDuplicateRecordInHP_PortabilityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FillDataGridView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FillDataGridView(string strNICRTOCode) {
            object[] results = this.Invoke("FillDataGridView", new object[] {
                        strNICRTOCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FillDataGridViewAsync(string strNICRTOCode) {
            this.FillDataGridViewAsync(strNICRTOCode, null);
        }
        
        /// <remarks/>
        public void FillDataGridViewAsync(string strNICRTOCode, object userState) {
            if ((this.FillDataGridViewOperationCompleted == null)) {
                this.FillDataGridViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillDataGridViewOperationCompleted);
            }
            this.InvokeAsync("FillDataGridView", new object[] {
                        strNICRTOCode}, this.FillDataGridViewOperationCompleted, userState);
        }
        
        private void OnFillDataGridViewOperationCompleted(object arg) {
            if ((this.FillDataGridViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FillDataGridViewCompleted(this, new FillDataGridViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataForBooking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataForBooking(string strVehicleRegNo) {
            object[] results = this.Invoke("GetDataForBooking", new object[] {
                        strVehicleRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataForBookingAsync(string strVehicleRegNo) {
            this.GetDataForBookingAsync(strVehicleRegNo, null);
        }
        
        /// <remarks/>
        public void GetDataForBookingAsync(string strVehicleRegNo, object userState) {
            if ((this.GetDataForBookingOperationCompleted == null)) {
                this.GetDataForBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataForBookingOperationCompleted);
            }
            this.InvokeAsync("GetDataForBooking", new object[] {
                        strVehicleRegNo}, this.GetDataForBookingOperationCompleted, userState);
        }
        
        private void OnGetDataForBookingOperationCompleted(object arg) {
            if ((this.GetDataForBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataForBookingCompleted(this, new GetDataForBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateForOrderClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateForOrderClosed(string strvehicleRegno, string strFront, string strRear, string strNICRtoId) {
            object[] results = this.Invoke("UpdateForOrderClosed", new object[] {
                        strvehicleRegno,
                        strFront,
                        strRear,
                        strNICRtoId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForOrderClosedAsync(string strvehicleRegno, string strFront, string strRear, string strNICRtoId) {
            this.UpdateForOrderClosedAsync(strvehicleRegno, strFront, strRear, strNICRtoId, null);
        }
        
        /// <remarks/>
        public void UpdateForOrderClosedAsync(string strvehicleRegno, string strFront, string strRear, string strNICRtoId, object userState) {
            if ((this.UpdateForOrderClosedOperationCompleted == null)) {
                this.UpdateForOrderClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForOrderClosedOperationCompleted);
            }
            this.InvokeAsync("UpdateForOrderClosed", new object[] {
                        strvehicleRegno,
                        strFront,
                        strRear,
                        strNICRtoId}, this.UpdateForOrderClosedOperationCompleted, userState);
        }
        
        private void OnUpdateForOrderClosedOperationCompleted(object arg) {
            if ((this.UpdateForOrderClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForOrderClosedCompleted(this, new UpdateForOrderClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateForOrderEmbossed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateForOrderEmbossed(string strvehicleRegno, string strFront, string strRear, string strOrderType, string strNICRtoId) {
            object[] results = this.Invoke("UpdateForOrderEmbossed", new object[] {
                        strvehicleRegno,
                        strFront,
                        strRear,
                        strOrderType,
                        strNICRtoId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForOrderEmbossedAsync(string strvehicleRegno, string strFront, string strRear, string strOrderType, string strNICRtoId) {
            this.UpdateForOrderEmbossedAsync(strvehicleRegno, strFront, strRear, strOrderType, strNICRtoId, null);
        }
        
        /// <remarks/>
        public void UpdateForOrderEmbossedAsync(string strvehicleRegno, string strFront, string strRear, string strOrderType, string strNICRtoId, object userState) {
            if ((this.UpdateForOrderEmbossedOperationCompleted == null)) {
                this.UpdateForOrderEmbossedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForOrderEmbossedOperationCompleted);
            }
            this.InvokeAsync("UpdateForOrderEmbossed", new object[] {
                        strvehicleRegno,
                        strFront,
                        strRear,
                        strOrderType,
                        strNICRtoId}, this.UpdateForOrderEmbossedOperationCompleted, userState);
        }
        
        private void OnUpdateForOrderEmbossedOperationCompleted(object arg) {
            if ((this.UpdateForOrderEmbossedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForOrderEmbossedCompleted(this, new UpdateForOrderEmbossedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateForOrderBooking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateForOrderBooking(string strvehicleRegno, string strAuthNo, string strAmount, string strNICRtoId) {
            object[] results = this.Invoke("UpdateForOrderBooking", new object[] {
                        strvehicleRegno,
                        strAuthNo,
                        strAmount,
                        strNICRtoId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForOrderBookingAsync(string strvehicleRegno, string strAuthNo, string strAmount, string strNICRtoId) {
            this.UpdateForOrderBookingAsync(strvehicleRegno, strAuthNo, strAmount, strNICRtoId, null);
        }
        
        /// <remarks/>
        public void UpdateForOrderBookingAsync(string strvehicleRegno, string strAuthNo, string strAmount, string strNICRtoId, object userState) {
            if ((this.UpdateForOrderBookingOperationCompleted == null)) {
                this.UpdateForOrderBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForOrderBookingOperationCompleted);
            }
            this.InvokeAsync("UpdateForOrderBooking", new object[] {
                        strvehicleRegno,
                        strAuthNo,
                        strAmount,
                        strNICRtoId}, this.UpdateForOrderBookingOperationCompleted, userState);
        }
        
        private void OnUpdateForOrderBookingOperationCompleted(object arg) {
            if ((this.UpdateForOrderBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForOrderBookingCompleted(this, new UpdateForOrderBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataForSticker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataForSticker(string strVehicleRegNo) {
            object[] results = this.Invoke("GetDataForSticker", new object[] {
                        strVehicleRegNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataForStickerAsync(string strVehicleRegNo) {
            this.GetDataForStickerAsync(strVehicleRegNo, null);
        }
        
        /// <remarks/>
        public void GetDataForStickerAsync(string strVehicleRegNo, object userState) {
            if ((this.GetDataForStickerOperationCompleted == null)) {
                this.GetDataForStickerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataForStickerOperationCompleted);
            }
            this.InvokeAsync("GetDataForSticker", new object[] {
                        strVehicleRegNo}, this.GetDataForStickerOperationCompleted, userState);
        }
        
        private void OnGetDataForStickerOperationCompleted(object arg) {
            if ((this.GetDataForStickerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataForStickerCompleted(this, new GetDataForStickerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCashSMSReciept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCashSMSReciept(System.Data.DataTable dtSMS) {
            object[] results = this.Invoke("UpdateCashSMSReciept", new object[] {
                        dtSMS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCashSMSRecieptAsync(System.Data.DataTable dtSMS) {
            this.UpdateCashSMSRecieptAsync(dtSMS, null);
        }
        
        /// <remarks/>
        public void UpdateCashSMSRecieptAsync(System.Data.DataTable dtSMS, object userState) {
            if ((this.UpdateCashSMSRecieptOperationCompleted == null)) {
                this.UpdateCashSMSRecieptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCashSMSRecieptOperationCompleted);
            }
            this.InvokeAsync("UpdateCashSMSReciept", new object[] {
                        dtSMS}, this.UpdateCashSMSRecieptOperationCompleted, userState);
        }
        
        private void OnUpdateCashSMSRecieptOperationCompleted(object arg) {
            if ((this.UpdateCashSMSRecieptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCashSMSRecieptCompleted(this, new UpdateCashSMSRecieptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSMSOnEmbossing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMSOnEmbossing(System.Data.DataTable dtSMS) {
            object[] results = this.Invoke("UpdateSMSOnEmbossing", new object[] {
                        dtSMS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMSOnEmbossingAsync(System.Data.DataTable dtSMS) {
            this.UpdateSMSOnEmbossingAsync(dtSMS, null);
        }
        
        /// <remarks/>
        public void UpdateSMSOnEmbossingAsync(System.Data.DataTable dtSMS, object userState) {
            if ((this.UpdateSMSOnEmbossingOperationCompleted == null)) {
                this.UpdateSMSOnEmbossingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMSOnEmbossingOperationCompleted);
            }
            this.InvokeAsync("UpdateSMSOnEmbossing", new object[] {
                        dtSMS}, this.UpdateSMSOnEmbossingOperationCompleted, userState);
        }
        
        private void OnUpdateSMSOnEmbossingOperationCompleted(object arg) {
            if ((this.UpdateSMSOnEmbossingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMSOnEmbossingCompleted(this, new UpdateSMSOnEmbossingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSMSOnClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSMSOnClosed(System.Data.DataTable dtSMS) {
            object[] results = this.Invoke("UpdateSMSOnClosed", new object[] {
                        dtSMS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMSOnClosedAsync(System.Data.DataTable dtSMS) {
            this.UpdateSMSOnClosedAsync(dtSMS, null);
        }
        
        /// <remarks/>
        public void UpdateSMSOnClosedAsync(System.Data.DataTable dtSMS, object userState) {
            if ((this.UpdateSMSOnClosedOperationCompleted == null)) {
                this.UpdateSMSOnClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMSOnClosedOperationCompleted);
            }
            this.InvokeAsync("UpdateSMSOnClosed", new object[] {
                        dtSMS}, this.UpdateSMSOnClosedOperationCompleted, userState);
        }
        
        private void OnUpdateSMSOnClosedOperationCompleted(object arg) {
            if ((this.UpdateSMSOnClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMSOnClosedCompleted(this, new UpdateSMSOnClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMobileNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMobileNo(string strVehicleRegNo) {
            object[] results = this.Invoke("GetMobileNo", new object[] {
                        strVehicleRegNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileNoAsync(string strVehicleRegNo) {
            this.GetMobileNoAsync(strVehicleRegNo, null);
        }
        
        /// <remarks/>
        public void GetMobileNoAsync(string strVehicleRegNo, object userState) {
            if ((this.GetMobileNoOperationCompleted == null)) {
                this.GetMobileNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileNoOperationCompleted);
            }
            this.InvokeAsync("GetMobileNo", new object[] {
                        strVehicleRegNo}, this.GetMobileNoOperationCompleted, userState);
        }
        
        private void OnGetMobileNoOperationCompleted(object arg) {
            if ((this.GetMobileNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileNoCompleted(this, new GetMobileNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendRecordForUpdationFromDataSyncCompletedEventHandler(object sender, SendRecordForUpdationFromDataSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRecordForUpdationFromDataSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRecordForUpdationFromDataSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateHP_PortablityFromDataSyncCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SearchRecordCompletedEventHandler(object sender, SearchRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SearchInHRDataRequestCompletedEventHandler(object sender, SearchInHRDataRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchInHRDataRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchInHRDataRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FillHSRPStateCompletedEventHandler(object sender, FillHSRPStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillHSRPStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillHSRPStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FillRtoCompletedEventHandler(object sender, FillRtoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillRtoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillRtoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FillProductionSheetCompletedEventHandler(object sender, FillProductionSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillProductionSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillProductionSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FillDataGridViewStickerCompletedEventHandler(object sender, FillDataGridViewStickerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillDataGridViewStickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillDataGridViewStickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStateInfoCompletedEventHandler(object sender, GetStateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRecordsCompletedEventHandler(object sender, GetRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDataByAuthNoCompletedEventHandler(object sender, GetDataByAuthNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByAuthNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByAuthNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDataByVehicleRegNoCompletedEventHandler(object sender, GetDataByVehicleRegNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByVehicleRegNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByVehicleRegNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InsertDataCashCollectionCompletedEventHandler(object sender, InsertDataCashCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataCashCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataCashCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRtoLocationIDCompletedEventHandler(object sender, GetRtoLocationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRtoLocationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRtoLocationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCashInvoiceChallanCompletedEventHandler(object sender, GetCashInvoiceChallanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashInvoiceChallanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashInvoiceChallanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateCashInvoiceChallanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRtoAddressCompletedEventHandler(object sender, GetRtoAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRtoAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRtoAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckOrderTypeCompletedEventHandler(object sender, CheckOrderTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOrderTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOrderTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckDuplicateEntryCompletedEventHandler(object sender, CheckDuplicateEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDuplicateEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDuplicateEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetLogInDetailCompletedEventHandler(object sender, GetLogInDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogInDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogInDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CashReceiptForHRCompletedEventHandler(object sender, CashReceiptForHRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CashReceiptForHRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CashReceiptForHRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRateAndTaxDetailCompletedEventHandler(object sender, GetRateAndTaxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRateAndTaxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRateAndTaxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRateAndTaxForVehicleCompletedEventHandler(object sender, GetRateAndTaxForVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRateAndTaxForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRateAndTaxForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PopulateVehicleTypeCompletedEventHandler(object sender, PopulateVehicleTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateVehicleTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateVehicleTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PopulateVehicleModelCompletedEventHandler(object sender, PopulateVehicleModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateVehicleModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateVehicleModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PopulateVehicleMakeCompletedEventHandler(object sender, PopulateVehicleMakeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateVehicleMakeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateVehicleMakeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RecordClosedCompletedEventHandler(object sender, RecordClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RecordNotClosedCompletedEventHandler(object sender, RecordNotClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordNotClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordNotClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InventoryStatusF_NotNewOrderCompletedEventHandler(object sender, InventoryStatusF_NotNewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventoryStatusF_NotNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InventoryStatusF_NotNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InventoryStatusR_NotNewOrderCompletedEventHandler(object sender, InventoryStatusR_NotNewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventoryStatusR_NotNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InventoryStatusR_NotNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InventoryStatusF_NewOrderCompletedEventHandler(object sender, InventoryStatusF_NewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventoryStatusF_NewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InventoryStatusF_NewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InventoryStatusR_NewOrderCompletedEventHandler(object sender, InventoryStatusR_NewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventoryStatusR_NewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InventoryStatusR_NewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FrontValidationCompletedEventHandler(object sender, FrontValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FrontValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FrontValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RearValidationCompletedEventHandler(object sender, RearValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RearValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RearValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void OrderStatusNotClosedCompletedEventHandler(object sender, OrderStatusNotClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderStatusNotClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderStatusNotClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void OrderStatusEmbossingDoneCompletedEventHandler(object sender, OrderStatusEmbossingDoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderStatusEmbossingDoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderStatusEmbossingDoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void OrderStatusEmbossingDoneUpdateCompletedEventHandler(object sender, OrderStatusEmbossingDoneUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderStatusEmbossingDoneUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderStatusEmbossingDoneUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void OrderStatusNewOrderCompletedEventHandler(object sender, OrderStatusNewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderStatusNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderStatusNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void OrderStatusNewOrderUpdateCompletedEventHandler(object sender, OrderStatusNewOrderUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderStatusNewOrderUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderStatusNewOrderUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Embossing_ValidateCompletedEventHandler(object sender, Embossing_ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Embossing_ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Embossing_ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Embossing_OrderStatusNotClosedCompletedEventHandler(object sender, Embossing_OrderStatusNotClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Embossing_OrderStatusNotClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Embossing_OrderStatusNotClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void E_OrderStatusEmbossingDoneCompletedEventHandler(object sender, E_OrderStatusEmbossingDoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class E_OrderStatusEmbossingDoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal E_OrderStatusEmbossingDoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void Embossing_RtoInventoryCompletedEventHandler(object sender, Embossing_RtoInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Embossing_RtoInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Embossing_RtoInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ChalanCompletedEventHandler(object sender, ChalanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChalanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChalanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SaveSMSLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDeatilsUsingVehcileRegNoCompletedEventHandler(object sender, GetDeatilsUsingVehcileRegNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeatilsUsingVehcileRegNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeatilsUsingVehcileRegNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDeatilsUsingVehcileRegNoForClosedCompletedEventHandler(object sender, GetDeatilsUsingVehcileRegNoForClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeatilsUsingVehcileRegNoForClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeatilsUsingVehcileRegNoForClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckOrderstatusCompletedEventHandler(object sender, CheckOrderstatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOrderstatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOrderstatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckOrderstatusForEmbossingCompletedEventHandler(object sender, CheckOrderstatusForEmbossingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOrderstatusForEmbossingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOrderstatusForEmbossingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ValidateLaserCodeCompletedEventHandler(object sender, ValidateLaserCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLaserCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLaserCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateLaserCodeCompletedEventHandler(object sender, UpdateLaserCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLaserCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLaserCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckLaserInHsrpRecordsCompletedEventHandler(object sender, CheckLaserInHsrpRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLaserInHsrpRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLaserInHsrpRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateClosedorderCompletedEventHandler(object sender, UpdateClosedorderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClosedorderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClosedorderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateHpSmsLogCompletedEventHandler(object sender, UpdateHpSmsLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHpSmsLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHpSmsLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateHpSmsLogOnClosedCompletedEventHandler(object sender, UpdateHpSmsLogOnClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHpSmsLogOnClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHpSmsLogOnClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getReportDataCompletedEventHandler(object sender, getReportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void updateFourthSmsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void updateFifthSmsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ValidateLaserCodeForOrderCloseCompletedEventHandler(object sender, ValidateLaserCodeForOrderCloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLaserCodeForOrderCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLaserCodeForOrderCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FillRTODropDownCompletedEventHandler(object sender, FillRTODropDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillRTODropDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillRTODropDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRTO_IDCompletedEventHandler(object sender, GetRTO_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRTO_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRTO_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InsertDataCompletedEventHandler(object sender, InsertDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckDuplicateRecordInHP_PortabilityDataCompletedEventHandler(object sender, CheckDuplicateRecordInHP_PortabilityDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDuplicateRecordInHP_PortabilityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDuplicateRecordInHP_PortabilityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FillDataGridViewCompletedEventHandler(object sender, FillDataGridViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FillDataGridViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FillDataGridViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDataForBookingCompletedEventHandler(object sender, GetDataForBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataForBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataForBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateForOrderClosedCompletedEventHandler(object sender, UpdateForOrderClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForOrderClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForOrderClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateForOrderEmbossedCompletedEventHandler(object sender, UpdateForOrderEmbossedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForOrderEmbossedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForOrderEmbossedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateForOrderBookingCompletedEventHandler(object sender, UpdateForOrderBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForOrderBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForOrderBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDataForStickerCompletedEventHandler(object sender, GetDataForStickerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataForStickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataForStickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateCashSMSRecieptCompletedEventHandler(object sender, UpdateCashSMSRecieptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCashSMSRecieptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCashSMSRecieptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateSMSOnEmbossingCompletedEventHandler(object sender, UpdateSMSOnEmbossingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMSOnEmbossingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMSOnEmbossingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateSMSOnClosedCompletedEventHandler(object sender, UpdateSMSOnClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMSOnClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMSOnClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMobileNoCompletedEventHandler(object sender, GetMobileNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591